{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","constants/productsConstants.js","actions/productsActions.js","components/Loader.js","components/Message.js","components/Rating.js","components/Products.js","components/Paginate.js","components/CarouselComp.js","components/HelmetComp.js","Screens/HomeScreen.js","constants/cartConstants.js","actions/cartActions.js","Screens/ProductDetailsScreen.js","Screens/CartScreen.js","components/FormContainer.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","components/CheckoutComp.js","Screens/ShippingAddressScreen.js","constants/paymentConstans.js","Screens/PaymentMethodScreen.js","actions/paymentActions.js","constants/orderConstants.js","actions/orderActions.js","Screens/PlaceOrderScreen.js","Screens/OrderDetailsScreen.js","Screens/UserProfileScreen.js","Screens/OrdersAdminScreen.js","Screens/UsersAdminScreen.js","Screens/UserUpdateAdminScreen.js","Screens/ProductsAdminScreen.js","Screens/ProductEditScreen.js","App.js","store.js","reducers/productsReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/paymentReducer.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_RESET","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_ADDRESS_SUCCESS","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USERS_ADMIN_REQUEST","USERS_ADMIN_SUCCESS","USERS_ADMIN_FAIL","USERS_ADMIN_RESET","USER_ADMIN_DELETE_REQUEST","USER_ADMIN_DELETE_SUCCESS","USER_ADMIN_DELETE_FAIL","USER_ADMIN_DELETE_RESET","USER_ADMIN_DETAILS_REQUEST","USER_ADMIN_DETAILS_SUCCESS","USER_ADMIN_DETAILS_FAIL","USER_ADMIN_DETAILS_RESET","USER_ADMIN_UPDATE_REQUEST","USER_ADMIN_UPDATE_SUCCESS","USER_ADMIN_UPDATE_FAIL","USER_ADMIN_UPDATE_RESET","userAddressAction","shippingAddress","dispatch","console","log","type","payload","localStorage","setItem","JSON","stringify","adminUsersAction","page","getState","token","login","userInfo","config","headers","Authorization","axios","get","data","response","message","SearchBox","history","useState","keywords","setKeywords","Form","onSubmit","e","preventDefault","push","inline","className","Group","controlId","Control","placeholder","value","onChange","target","Button","variant","Header","useDispatch","useSelector","state","Navbar","bg","expand","Container","to","Brand","Toggle","Collapse","id","render","Nav","Link","NavDropdown","title","name","Item","href","onClick","removeItem","isAdmin","Footer","Row","Col","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_RESET","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_CREATE_ADMIN_REQUEST","PRODUCT_CREATE_ADMIN_SUCCESS","PRODUCT_CREATE_ADMIN_FAIL","PRODUCT_CREATE_ADMIN_RESET","PRODUCT_DELETE_ADMIN_REQUEST","PRODUCT_DELETE_ADMIN_SUCCESS","PRODUCT_DELETE_ADMIN_FAIL","PRODUCT_DELETE_ADMIN_RESET","PRODUCT_UPDATE_ADMIN_REQUEST","PRODUCT_UPDATE_ADMIN_SUCCESS","PRODUCT_UPDATE_ADMIN_FAIL","PRODUCT_UPDATE_ADMIN_RESET","PRODUCT_REVIEW_REQUEST","PRODUCT_REVIEW_SUCCESS","PRODUCT_REVIEW_FAIL","PRODUCT_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","PRODUCT_TOP_RESET","productListAction","productDetailsAction","Loader","Spinner","animation","role","style","display","margin","Message","children","Alert","Rating","rating","Products","product","Card","_id","Img","src","image","alt","Body","Title","as","Text","numReviews","price","Paginate","pages","pageNumber","productAdmin","userAdmin","orderAdmin","userOrders","Pagination","Array","keys","map","x","active","CarouselComp","topProducts","useEffect","loadingTop","loading","productsTop","products","errorTop","error","Carousel","Image","fluid","Caption","HelmetComp","description","Helmet","content","HomeScreen","match","params","Number","productList","md","lg","sm","xm","CART_ADD_RESET","CART_ADD","CART_DELETE","addTocartAction","cartItem","cartItems","cart","ProductDetailsScreen","qty","setQty","productId","productInfo","productDetails","reviewProduct","loadingReview","success","errorReview","setRating","comment","setComment","setMessage","ListGroup","brand","countInStock","disabled","review","post","reviewProductAction","user","Label","reviews","createdAt","substring","border","CartScreen","deleteCartHandler","deleteCartAction","length","item","toFixed","label","reduce","acc","FormContainer","span","offset","LoginScreen","email","setEmail","password","setPassword","RegisterScreen","userRegister","setName","confirmPassword","setConfirmPassword","CheckoutComp","step1","step2","step3","step4","color","ShippingAddressScreen","location","userAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","redirect","search","split","addressHandler","ADD_PAYMENT_METHOD_SUCCESS","PaymentMethodScreen","paymentMethodFromStore","payment","paymentMethod","setPaymentMethod","paymentMethodAction","Check","checked","custom","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_RESET","ORDER_USER_REQUEST","ORDER_USER_SUCCESS","ORDER_USER_FAIL","ORDER_USER_RESET","ORDER_ADMIN_REQUEST","ORDER_ADMIN_SUCCESS","ORDER_ADMIN_FAIL","ORDER_ADMIN_RESET","ORDER_ADMIN_UPDATE_REQUEST","ORDER_ADMIN_UPDATE_SUCCESS","ORDER_ADMIN_UPDATE_FAIL","ORDER_ADMIN_UPDATE_RESET","adminOrdersAction","updateOrderAction","put","PlaceOrderScreen","sdkReady","setSdkReady","createOrder","order","itemsPrice","taxPrice","deliveryPrice","totalPrice","buildScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","fontSize","amount","onSuccess","paymentResult","createOrderAction","orderItems","OrderDetailsScreen","orderId","orderDetails","orderInfo","isDelivered","deliveredAt","UserProfileScreen","updateUser","loadingOrders","orders","errorOrders","userOrdersAction","Table","hover","bordered","responsive","class","OrdersAdminScreen","adminOrders","updateOrder","loadingUpdate","errorUpdate","UsersAdminScreen","adminUsers","users","userDeleteAdmin","loadingDelete","errorDelete","userDeleteHandler","delete","userDeleteAdminAction","UserUpdateAdminScreen","userId","userDetailsAdmin","userUpdateAdmin","setIsAdmin","userUpdateAdminAction","ProductsAdminScreen","createProduct","loadingCreate","successCreate","errorCreate","deleteProduct","successDelete","deleteProductHandler","deleteProductAction","category","ProductEditScreen","setDescription","setCategory","setBrand","setImage","setPrice","setCountInStock","uploading","setUploading","updateProduct","uploadImageHandler","file","files","formData","FormData","append","File","App","exact","path","component","reducers","combineReducers","action","itemExist","find","p","filter","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1b1c4df1.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGIN_RESET = \"USER_LOGIN_RESET\"\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\nexport const USER_REGISTER_RESET = \"USER_REGISTER_RESET\"\n\nexport const USER_ADDRESS_SUCCESS = \"USER_ADDRESS_SUCCESS\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\"\n\n\nexport const USERS_ADMIN_REQUEST = \"USERS_ADMIN_REQUEST\";\nexport const USERS_ADMIN_SUCCESS = \"USERS_ADMIN_SUCCESS\";\nexport const USERS_ADMIN_FAIL = \"USERS_ADMIN_FAIL\";\nexport const USERS_ADMIN_RESET = \"USERS_ADMIN_RESET\"\n\n\nexport const USER_ADMIN_DELETE_REQUEST = \"USER_ADMIN_DELETE_REQUEST\";\nexport const USER_ADMIN_DELETE_SUCCESS = \"USER_ADMIN_DELETE_SUCCESS\";\nexport const USER_ADMIN_DELETE_FAIL = \"USER_ADMIN_DELETE_FAIL\";\nexport const USER_ADMIN_DELETE_RESET = \"USER_ADMIN_DELETE_RESET\"\n\n\nexport const USER_ADMIN_DETAILS_REQUEST = \"USER_ADMIN_DETAILS_REQUEST\";\nexport const USER_ADMIN_DETAILS_SUCCESS = \"USER_ADMIN_DETAILS_SUCCESS\";\nexport const USER_ADMIN_DETAILS_FAIL = \"USER_ADMIN_DETAILS_FAIL\";\nexport const USER_ADMIN_DETAILS_RESET = \"USER_ADMIN_DETAILS_RESET\"\n\n\nexport const USER_ADMIN_UPDATE_REQUEST = \"USER_ADMIN_UPDATE_REQUEST\";\nexport const USER_ADMIN_UPDATE_SUCCESS = \"USER_ADMIN_UPDATE_SUCCESS\";\nexport const USER_ADMIN_UPDATE_FAIL = \"USER_ADMIN_UPDATE_FAIL\";\nexport const USER_ADMIN_UPDATE_RESET = \"USER_ADMIN_UPDATE_RESET\"\n\n\n","import axios from 'axios';\nimport {\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET,\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\n    USER_ADDRESS_SUCCESS,\n    USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL,\n    USERS_ADMIN_REQUEST, USERS_ADMIN_SUCCESS, USERS_ADMIN_FAIL,\n    USER_ADMIN_DELETE_REQUEST, USER_ADMIN_DELETE_SUCCESS, USER_ADMIN_DELETE_FAIL,\n    USER_ADMIN_DETAILS_REQUEST, USER_ADMIN_DETAILS_SUCCESS, USER_ADMIN_DETAILS_FAIL,\n    USER_ADMIN_UPDATE_REQUEST, USER_ADMIN_UPDATE_SUCCESS, USER_ADMIN_UPDATE_FAIL,\n} from '../constants/userConstants';\n\n\n\n\n\nexport const userRegisterAction = (user) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n\n        const { data } = await axios.post('/api/users/register', user, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const loginAction = (user) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', user, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const logoutAction = () => (dispatch) => {\n    localStorage.removeItem(\"userInfo\");\n\n    dispatch({\n        type: USER_LOGIN_RESET\n    })\n}\n\n\n\n\nexport const userAddressAction = (shippingAddress) => (dispatch) => {\n\n    console.log(\"INSIDE ACTION\")\n\n    dispatch({\n        type: USER_ADDRESS_SUCCESS,\n        payload: shippingAddress\n    });\n\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(shippingAddress));\n\n}\n\n\n\nexport const updateUserAction = (user) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/update`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\n\n    } catch (error) {\n\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n\n    }\n}\n\n\n\nexport const adminUsersAction = (page = 1) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USERS_ADMIN_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/admin?page=${page}`, config)\n\n        dispatch({\n            type: USERS_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USERS_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const userDeleteAdminAction = (id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_ADMIN_DELETE_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/users/user/${id}`, config)\n\n        dispatch({\n            type: USER_ADMIN_DELETE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_ADMIN_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const userDetailsAdminAction = (id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_ADMIN_DETAILS_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/admin/${id}`, config);\n\n        dispatch({\n            type: USER_ADMIN_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_ADMIN_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const userUpdateAdminAction = (user) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_ADMIN_UPDATE_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/admin/${user._id}`, user, config)\n\n        dispatch({\n            type: USER_ADMIN_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_ADMIN_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n\n    const [keywords, setKeywords] = useState(\"\");\n\n\n    const searchHandler = (e) => {\n        e.preventDefault();\n\n        if (keywords) {\n            history.push(`/keywords/${keywords}`)\n\n        } else {\n            history.push(\"/\")\n        }\n    }\n\n\n    return (\n        <Form onSubmit={searchHandler} inline className=\"m-auto\">\n            <Form.Group controlId=\"serchbox\">\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Search Products ...\"\n                    value={keywords}\n                    onChange={e => setKeywords(e.target.value)}\n                />\n            </Form.Group>\n            <Button type=\"submit\" variant=\"info\" className=\"m-3\">Search</Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from '../actions/userActions';\nimport SearchBox from '../components/SearchBox';\nimport { Route } from 'react-router-dom';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login);\n\n    const { userInfo } = login\n\n    return (\n        <header className=\"mb-3\">\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>E Shop</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Route render={({ history }) => <SearchBox history={history} />} />\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to=\"/cart\">\n                                <Nav.Link>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {!userInfo ? (<LinkContainer to=\"/login\">\n                                <Nav.Link>Sign In</Nav.Link>\n                            </LinkContainer>) : (\n                                    <NavDropdown title={userInfo.name} id=\"basic-nav-dropdown\">\n                                        <LinkContainer to=\"/profile/1\">\n                                            <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <NavDropdown.Item onClick={() => dispatch(logoutAction())} >Logout</NavDropdown.Item>\n\n                                    </NavDropdown>\n                                )}\n\n                            {(userInfo && userInfo.isAdmin) && (\n                                <NavDropdown title=\"Admin\" id=\"basic-nav-dropdown2\">\n                                    <LinkContainer to=\"/admin/users/1\">\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to=\"/admin/products/1\">\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to=\"/admin/orders/1\">\n                                        <NavDropdown.Item >Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Row, Col, Container } from 'react-bootstrap';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row >\n                    <Col className=\"text-center my-3\">\n                        copyrights &copy; Eshop\n                 </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\"\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\"\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\"\nexport const PRODUCT_LIST_RESET = \"PRODUCT_LIST_RESET\"\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\"\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\nexport const PRODUCT_DETAILS_RESET = \"PRODUCT_DETAILS_RESET\"\n\nexport const PRODUCT_CREATE_ADMIN_REQUEST = \"PRODUCT_CREATE_ADMIN_REQUEST\"\nexport const PRODUCT_CREATE_ADMIN_SUCCESS = \"PRODUCT_CREATE_ADMIN_SUCCESS\"\nexport const PRODUCT_CREATE_ADMIN_FAIL = \"PRODUCT_CREATE_ADMIN_FAIL\"\nexport const PRODUCT_CREATE_ADMIN_RESET = \"PRODUCT_CREATE_ADMIN_RESET\"\n\nexport const PRODUCT_DELETE_ADMIN_REQUEST = \"PRODUCT_DELETE_ADMIN_REQUEST\"\nexport const PRODUCT_DELETE_ADMIN_SUCCESS = \"PRODUCT_DELETE_ADMIN_SUCCESS\"\nexport const PRODUCT_DELETE_ADMIN_FAIL = \"PRODUCT_DELETE_ADMIN_FAIL\"\nexport const PRODUCT_DELETE_ADMIN_RESET = \"PRODUCT_DELETE_ADMIN_RESET\"\n\nexport const PRODUCT_UPDATE_ADMIN_REQUEST = \"PRODUCT_UPDATE_ADMIN_REQUEST\"\nexport const PRODUCT_UPDATE_ADMIN_SUCCESS = \"PRODUCT_UPDATE_ADMIN_SUCCESS\"\nexport const PRODUCT_UPDATE_ADMIN_FAIL = \"PRODUCT_UPDATE_ADMIN_FAIL\"\nexport const PRODUCT_UPDATE_ADMIN_RESET = \"PRODUCT_UPDATE_ADMIN_RESET\"\n\nexport const PRODUCT_REVIEW_REQUEST = \"PRODUCT_REVIEW_REQUEST\"\nexport const PRODUCT_REVIEW_SUCCESS = \"PRODUCT_REVIEW_SUCCESS\"\nexport const PRODUCT_REVIEW_FAIL = \"PRODUCT_REVIEW_FAIL\"\nexport const PRODUCT_REVIEW_RESET = \"PRODUCT_REVIEW_RESET\"\n\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\"\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\"\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\"\nexport const PRODUCT_TOP_RESET = \"PRODUCT_TOP_RESET\"\n\n","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_CREATE_ADMIN_REQUEST,\n    PRODUCT_CREATE_ADMIN_SUCCESS,\n    PRODUCT_CREATE_ADMIN_FAIL,\n    PRODUCT_DELETE_ADMIN_REQUEST,\n    PRODUCT_DELETE_ADMIN_SUCCESS,\n    PRODUCT_DELETE_ADMIN_FAIL,\n    PRODUCT_UPDATE_ADMIN_REQUEST, PRODUCT_UPDATE_ADMIN_SUCCESS, PRODUCT_UPDATE_ADMIN_FAIL,\n    PRODUCT_REVIEW_REQUEST, PRODUCT_REVIEW_SUCCESS, PRODUCT_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL,\n} from '../constants/productsConstants';\n\nimport axios from 'axios';\n\n\n\n\nexport const productListAction = (keywords = '', page = 1) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_LIST_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/products/all?keywords=${keywords}&page=${page}`);\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const productDetailsAction = (id) => async (dispatch) => {\n\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST\n        });\n\n        const { data } = await axios.get(`/api/products/get/${id}`);\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const createProductAction = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_CREATE_ADMIN_REQUEST\n        });\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.post(\"/api/products/create\", {}, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const deleteProductAction = (id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_DELETE_ADMIN_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/products/${id}`, config)\n\n        dispatch({\n            type: PRODUCT_DELETE_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const updateProductAction = (product) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_UPDATE_ADMIN_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\n\n        dispatch({\n            type: PRODUCT_UPDATE_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const reviewProductAction = (productId, review) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_REVIEW_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n\n        const { data } = await axios.post(`/api/products/review/${productId}`, review, config)\n\n        dispatch({\n            type: PRODUCT_REVIEW_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_REVIEW_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const topProductsAction = () => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_TOP_REQUEST\n        })\n\n        const { data } = await axios.get(\"/api/products/top\")\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n\n    }\n}","import React from 'react';\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner\n            animation=\"border\"\n            role=\"status\"\n            style={{ display: \"block\", margin: \"1rem auto\" }}\n        >\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\n\nconst Rating = ({ rating }) => {\n    return (\n        <>\n            {rating >= 1 ? (<i className=\"fas fa-star\"></i>) : rating >= 0.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n            {rating >= 2 ? (<i className=\"fas fa-star\"></i>) : rating >= 1.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n            {rating >= 3 ? (<i className=\"fas fa-star\"></i>) : rating >= 2.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n            {rating >= 4 ? (<i className=\"fas fa-star\"></i>) : rating >= 3.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n            {rating >= 5 ? (<i className=\"fas fa-star\"></i>) : rating >= 4.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n        </>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Rating from './Rating';\nimport { Link } from 'react-router-dom';\n\nconst Products = ({ product }) => {\n    return (\n        <Card className=\"p-2\">\n            <Link to={`/productDetails/${product._id}`}>\n                <Card.Img src={product.image} alt={product.name} variant=\"top\" />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/productDetails/${product._id}`}>\n                    <Card.Title as=\"div\" className=\"my-2\">{product.name}</Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\" className=\"py-2\">\n                    <Rating rating={product.rating} /> ({product.numReviews})\n                </Card.Text>\n                <Card.Text as=\"h3\"><strong>${product.price}</strong></Card.Text>\n\n            </Card.Body>\n        </Card >\n    )\n}\n\nexport default Products\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, pageNumber = 1, keywords = \"\", productAdmin = false, userAdmin = false, orderAdmin = false, userOrders = false }) => {\n    return (\n        <>\n            {(!productAdmin && !userAdmin && !orderAdmin && !userOrders) && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={keywords === \"\" ? `/page/${x + 1}` : `/keywords/${keywords}/page/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n\n            {productAdmin && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={`/admin/products/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n\n            {userAdmin && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={`/admin/users/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n\n            {orderAdmin && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={`/admin/orders/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n\n            {userOrders && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={`/profile/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n        </>\n    )\n}\n\nexport default Paginate\n","import React, { useEffect } from 'react'\nimport { Carousel, Image } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { topProductsAction } from '../actions/productsActions';\nimport Loader from './Loader';\nimport Message from './Message';\nimport { Link } from \"react-router-dom\"\nconst CarouselComp = () => {\n\n    const dispatch = useDispatch()\n\n    const topProducts = useSelector(state => state.topProducts)\n\n    useEffect(() => {\n        dispatch(topProductsAction())\n    }, [])\n\n    const { loading: loadingTop, products: productsTop, error: errorTop } = topProducts\n    return (\n        <>\n            {loadingTop ? <Loader /> : errorTop ? <Message variant=\"danger\">{errorTop}</Message> : (\n                <Carousel className=\"bg-dark\" variant=\"dark\">\n                    {productsTop.map((product) => {\n                        return <Carousel.Item key={product._id}>\n                            <Link to={`/productDetails/${product._id}`}>\n                                <Image src={product.image} alt={product.name} fluid />\n                            </Link>\n\n                            <Link to={`/productDetails/${product._id}`}>\n                                <Carousel.Caption>\n                                    <h3>{product.name} (${product.price})</h3>\n                                </Carousel.Caption>\n                            </Link>\n\n\n                        </Carousel.Item>\n                    })}\n                </Carousel>\n            )}\n\n        </>\n    )\n}\n\nexport default CarouselComp\n","import React from 'react'\nimport { Helmet } from \"react-helmet\";\n\nconst HelmetComp = ({ title, description }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n        </Helmet>\n    )\n}\n\nexport default HelmetComp\n","import React, { useEffect } from 'react'\nimport { Row, Col, Card, Button, Carousel } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { productListAction } from '../actions/productsActions';\nimport { PRODUCT_LIST_RESET } from '../constants/productsConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Products from '../components/Products';\nimport Paginate from '../components/Paginate';\nimport CarouselComp from '../components/CarouselComp';\nimport HelmetComp from '../components/HelmetComp';\n\nconst HomeScreen = ({ match }) => {\n\n    const keywords = match.params.keywords || ''\n\n    const page = Number(match.params.page || 1)\n\n    const dispatch = useDispatch();\n    const productList = useSelector(state => state.productList);\n    const { loading, products, pageNumber, pages, error } = productList;\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: PRODUCT_LIST_RESET\n            })\n        }\n    }, [])\n\n\n\n    useEffect(() => {\n        dispatch(productListAction(keywords, page))\n    }, [dispatch, keywords, page])\n\n\n    return (\n        <>\n            <HelmetComp title={`E Shop || Home Page`} description=\"E Shop\" />\n            <CarouselComp />\n            <h2 className=\"my-3  \">Latest Products</h2>\n\n\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <>\n                    <Row>\n                        {products.map((product) => {\n                            return <Col md={4} lg={3} sm={6} xm={12} className=\"py-3\" key={product._id}>\n                                <Products product={product} />\n                            </Col>\n                        })}\n                    </Row>\n                    <Paginate pageNumber={pageNumber} pages={pages} keywords={keywords} />\n                </>\n            )}\n\n        </>\n    )\n}\n\nexport default HomeScreen\n","export const CART_ADD_RESET = \"CART_ADD_RESET\"\nexport const CART_ADD = \"CART_ADD\"\nexport const CART_DELETE = \"CART_DELETE\"\n","import { CART_ADD, CART_ADD_RESET, CART_DELETE } from '../constants/cartConstants';\n\n\n\nexport const addTocartAction = (cartItem) => (dispatch, getState) => {\n\n    console.log(\"cartItem\", cartItem)\n\n    dispatch({\n        type: CART_ADD,\n        payload: cartItem\n    });\n\n    const cart = getState().cart;\n    const { cartItems } = cart\n\n\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n}\n\n\n\nexport const deleteCartAction = (id) => (dispatch, getState) => {\n\n    dispatch({\n        type: CART_DELETE,\n        payload: id\n    })\n\n    const cart = getState().cart;\n\n    const { cartItems } = cart;\n\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems))\n}","import React, { useState, useEffect } from 'react';\nimport { productDetailsAction, reviewProductAction } from '../actions/productsActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Button, Card, Image, Form } from 'react-bootstrap';\nimport { addTocartAction } from '../actions/cartActions';\nimport { PRODUCT_DETAILS_RESET, PRODUCT_REVIEW_RESET } from '../constants/productsConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Rating from '../components/Rating';\nimport { Link } from 'react-router-dom';\nimport HelmetComp from '../components/HelmetComp';\n\n\nconst ProductDetailsScreen = ({ match, history }) => {\n\n    const [qty, setQty] = useState(1)\n\n    const productId = match.params.id\n\n    const dispatch = useDispatch();\n\n    const productInfo = useSelector(state => state.productInfo)\n    const { loading, productDetails, error } = productInfo;\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const reviewProduct = useSelector(state => state.reviewProduct)\n\n    const { loading: loadingReview, success, error: errorReview } = reviewProduct\n\n\n    const [rating, setRating] = useState(\"\");\n    const [comment, setComment] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: PRODUCT_DETAILS_RESET\n            })\n        }\n    }, [])\n\n\n    useEffect(() => {\n        if (!productDetails || !productDetails.name || productDetails._id !== productId) {\n            dispatch(productDetailsAction(productId))\n        }\n\n        if (success) {\n            dispatch({\n                type: PRODUCT_REVIEW_RESET\n            })\n\n            dispatch(productDetailsAction(productId))\n        }\n\n\n    }, [dispatch, productId, productDetails, success])\n\n\n\n    const addToCartHandler = () => {\n        const cartItem = {\n            product: productId,\n            name: productDetails.name,\n            image: productDetails.image,\n            qty: Number(qty),\n            price: productDetails.price,\n            countInStock: productDetails.countInStock\n        }\n\n        dispatch(addTocartAction(cartItem))\n\n        history.push(\"/cart\")\n\n    }\n\n\n\n    const reviewSubmitHandler = (e) => {\n        e.preventDefault();\n\n        if (!rating || !comment) {\n            setMessage(\"Rating and Comment Both Are Mandatory\")\n        } else {\n\n            dispatch(reviewProductAction(productId, {\n                user: userInfo._id,\n                name: userInfo.name,\n                rating,\n                comment\n            }))\n            setMessage(\"\")\n            setRating(\"\")\n            setComment(\"\")\n        }\n\n    }\n\n    return (\n        <>\n            <HelmetComp title={productDetails.name} description=\"E Shop\" />\n            <h2 className=\"text-center py-3\">Product Details</h2>\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <>\n                    <Row className=\"my-3 py-3\">\n                        <Col md={5}>\n                            <Image src={productDetails.image} alt={productDetails.name} fluid />\n                        </Col>\n\n                        <Col md={4}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item as=\"h3\">\n                                    {productDetails.name}\n                                </ListGroup.Item>\n                                <ListGroup.Item as=\"p\">\n                                    Brand: {productDetails.brand}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Rating rating={productDetails.rating} /> Rating from ({productDetails.numReviews}) Reviews\n                            </ListGroup.Item>\n                                <ListGroup.Item as=\"p\">\n                                    Product Code:  {productDetails._id}\n                                </ListGroup.Item>\n                                <ListGroup.Item as=\"h5\">\n                                    Description: {productDetails.description}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n\n                        <Col md={3}>\n                            <Card>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                Price:\n                                     </Col>\n\n                                            <Col>\n                                                ${productDetails.price}\n                                            </Col>\n\n                                        </Row>\n\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                Status:\n                                     </Col>\n\n                                            <Col>\n                                                {productDetails.countInStock === 0 ? `Out Of Stock` : `In Stock`}\n                                            </Col>\n\n                                        </Row>\n\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                Qty:\n                                       </Col>\n\n                                            <Col>\n                                                <Form>\n                                                    <Form.Group controlId=\"qty\">\n                                                        <Form.Control\n                                                            as=\"select\"\n                                                            onChange={e => setQty(e.target.value)}\n                                                        >\n                                                            <option>select</option>\n                                                            {[...Array(productDetails.countInStock).keys()].map((x) => {\n                                                                return <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                            })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n                                                </Form>\n                                            </Col>\n\n                                        </Row>\n\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Button type=\"button\" variant=\"primary\" className=\"btn btn-block\"\n                                            disabled={productDetails.countInStock === 0}\n                                            onClick={addToCartHandler}\n                                        >Add To Cart</Button>\n                                    </ListGroup.Item>\n\n                                </ListGroup>\n                            </Card>\n                        </Col>\n\n                    </Row>\n\n                    <Row>\n                        <Col md={4}>\n                            {userInfo ? (\n                                <>\n                                    <h2 className=\"my-3\"> Write A Review</h2>\n                                    {message && <Message variant=\"danger\">{message}</Message>}\n                                    {errorReview && <Message variant=\"danger\">{errorReview}</Message>}\n                                    {loadingReview && <Loader />}\n                                    <Form onSubmit={reviewSubmitHandler}>\n                                        <Form.Group controlId=\"rating\">\n                                            <Form.Label>Rating:</Form.Label>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={rating}\n                                                onChange={e => setRating(e.target.value)}\n                                            >\n                                                <option>Select...</option>\n                                                <option value=\"1\">1 Poor</option>\n                                                <option value=\"2\">2 Fair</option>\n                                                <option value=\"3\">3 Good</option>\n                                                <option value=\"4\">4 Very Good</option>\n                                                <option value=\"5\">5 Excellent</option>\n\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"comment\">\n                                            <Form.Label>Comment</Form.Label>\n                                            <Form.Control\n                                                as=\"textarea\"\n                                                value={comment}\n                                                onChange={e => setComment(e.target.value)}\n                                            />\n                                        </Form.Group>\n\n                                        <Button type=\"submit\" variant=\"primary\">Submit</Button>\n\n                                    </Form>\n                                </>\n                            ) : (\n                                    <h4 className=\"my-3\"> <Link to=\"/login\">Log In</Link> to write a review </h4>\n                                )}\n                        </Col>\n                        <Col md={2}></Col>\n                        <Col md={6}>\n                            <h2 className=\"my-3\">Customer Reviews</h2>\n\n                            {productDetails.reviews.map((review) => {\n                                return <div key={review._id} className=\"py-3\">\n                                    <Rating rating={review.rating} /> <br></br>\n                                    {review.name} <br />\n                                    {review.createdAt.substring(0, 10)}\n\n                                    <h4 className=\"mt-3\">{review.comment}</h4>\n                                    <div style={{ border: \"1px solid gray\" }}></div>\n                                </div>\n                            })}\n\n\n                        </Col>\n                    </Row>\n                </>\n            )}\n\n\n        </>\n    )\n}\n\nexport default ProductDetailsScreen\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Card, ListGroup, Button, Image, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { addTocartAction, deleteCartAction } from '../actions/cartActions';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\n\n\nconst CartScreen = () => {\n\n    // const [qty, setQty] = useState(1)\n\n    const dispatch = useDispatch();\n\n    const cart = useSelector(state => state.cart);\n\n    const { cartItems } = cart\n\n\n\n    const deleteCartHandler = (id) => {\n        dispatch(deleteCartAction(id))\n    }\n\n    return (\n        <>\n            <HelmetComp title={`Cart`} description=\"E Shop\" />\n            {cartItems.length === 0 ? (\n                <Message>You Cart Is Empty <Link to=\"/\">Go Back</Link></Message>\n            ) : (\n                    <Row>\n                        <Col md={9}>\n                            <h2 className=\"py-3\">Cart</h2>\n                            <ListGroup variant=\"flush\">\n                                {cartItems.map((item) => {\n                                    return <ListGroup.Item key={item.product}>\n                                        <Row>\n                                            <Col md={2}>\n                                                <Link to={`/productDetails/${item.product}`}>\n                                                    <Image src={item.image} alt={item.name} fluid />\n                                                </Link>\n\n                                            </Col>\n\n                                            <Col md={3}>\n                                                <Link to={`/productDetails/${item.product}`}>\n                                                    <h6>{item.name}</h6>\n                                                </Link>\n                                            </Col>\n\n                                            <Col md={3}>\n                                                <h6>{item.qty} X $ {item.price} = ${(item.qty * item.price).toFixed(2)}</h6>\n                                            </Col>\n\n                                            <Col md={2}>\n                                                <Form>\n                                                    <Form.Group controlId=\"updateCart\">\n                                                        <Form.Control\n                                                            as=\"select\"\n                                                            label=\"qty\"\n                                                            onChange={e => dispatch(addTocartAction({ ...item, qty: Number(e.target.value) }))}\n                                                        >\n                                                            <option>Qty</option>\n                                                            {[...Array(item.countInStock).keys()].map((x) => {\n                                                                return <option value={x + 1} key={x + 1}>{x + 1}</option>\n                                                            })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n                                                </Form>\n                                            </Col>\n\n                                            <Col md={2} className=\"text-center\">\n                                                <i className=\"far fa-trash-alt fa-2x\" onClick={() => deleteCartHandler(item.product)}></i>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                })}\n\n                            </ListGroup>\n                        </Col>\n\n                        <Col md={3}>\n                            <h2 className=\"py-3\">Cart Total</h2>\n                            <Card>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h4>Total Items ({cartItems.length})</h4>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <h4>Total Quantity ({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h4>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                <h4>Total:</h4>\n                                            </Col>\n\n                                            <Col>\n                                                <h4> ${cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)}</h4>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Link to=\"/shippingAddress?redirect=shipping\">\n                                            <Button variant=\"primary\" className=\"btn btn-block\">Checkout</Button>\n                                        </Link>\n                                    </ListGroup.Item>\n\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                )}\n        </>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Row, Col, Container } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Row>\n\n            <Col md={{ span: 6, offset: 3 }}>\n                {children}\n            </Col>\n        </Row>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport FormContainer from '../components/FormContainer';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loginAction } from '../actions/userActions';\nimport { Link } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\n\nconst LoginScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n    const login = useSelector(state => state.login);\n\n    const { loading, userInfo, error } = login\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(\"/\");\n        }\n    }, [userInfo])\n\n    const loginHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(loginAction({ email, password }))\n    }\n\n\n    return (\n\n        <FormContainer>\n            <HelmetComp title={`Log In`} description=\"E Shop\" />\n            <h2 className=\"my-3\">Sign In</h2>\n            {loading && <Loader />}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            <Form onSubmit={loginHandler}>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter Email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Enter Password\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\" >\n                    Log In\n                </Button>\n            </Form>\n            <p className=\"py-3\">New User ? <Link to=\"/register\">Register Here</Link></p>\n        </FormContainer>\n\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react';\nimport FormContainer from '../components/FormContainer';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userRegisterAction } from '../actions/userActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\n\n\n\n\nconst RegisterScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const { loading, success, error } = userRegister;\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(\"/\")\n        }\n    }, [userInfo])\n\n\n    const registerHandler = (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n            setMessage(\"Passwords Do Not Match\")\n        } else {\n            setMessage('');\n\n            dispatch(userRegisterAction({\n                name,\n                email,\n                password\n            }))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <HelmetComp title={`Sign Up`} description=\"E Shop\" />\n\n            <h2 className=\"my-3\">Sign Up</h2>\n            {loading && <Loader />}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {message && <Message variant=\"danger\">{message}</Message>}\n            <Form onSubmit={registerHandler}>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Enter Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmpassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">Register</Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\n\nconst CheckoutComp = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Row className=\"my-4\">\n\n            <Col md={2}></Col>\n\n\n            <span>\n                {step1 ? (\n                    <h5 style={{ color: \"green\" }} className=\"mr-3\">User Logged In &#10230;</h5>\n                ) : (\n                        <h5 className=\"mr-3\">User Logged In &#10230;</h5>\n                    )}\n            </span>\n\n            <span >\n                {step2 ? (\n                    <h5 style={{ color: \"green\" }} className=\"mr-3\">Shipping Address &#10230;</h5>\n                ) : (\n                        <h5 className=\"mr-3\">Shipping Address &#10230;</h5>\n                    )}\n            </span>\n\n            <span>\n                {step3 ? (\n                    <h5 style={{ color: \"green\" }} className=\"mr-3\">Payment Method &#10230;</h5>\n                ) : (\n                        <h5 className=\"mr-3\">Payment Method &#10230;</h5>\n                    )}\n            </span>\n\n            <span>\n                {step4 ? (\n                    <h5 style={{ color: \"green\" }} className=\"mr-3\">Place Order   </h5>\n                ) : (\n                        <h5 className=\"mr-3\">Place Order</h5>\n                    )}\n            </span>\n\n\n            <Col md={2}></Col>\n        </Row>\n\n    )\n}\n\nexport default CheckoutComp\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { Link } from 'react-router-dom';\nimport { userAddressAction } from '../actions/userActions';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\nimport CheckoutComp from '../components/CheckoutComp';\n\nconst ShippingAddressScreen = ({ history, location }) => {\n\n    const userAddress = useSelector(state => state.userAddress);\n\n    const { shippingAddress } = userAddress;\n\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country)\n    const [message, setMessage] = useState(\"\");\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const redirect = location.search && location.search.split(\"=\")[1]\n\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if (!redirect || !userInfo) {\n            history.push(\"/login\")\n        }\n    }, [history, redirect, userInfo])\n\n\n\n\n\n    const addressHandler = async (e) => {\n\n        e.preventDefault();\n\n\n\n        if (!address || !city || !postalCode || !country) {\n            setMessage(\"All Fields Are Mandatory\")\n        } else {\n\n            setMessage(\"\");\n\n            await dispatch(userAddressAction({\n                address,\n                city,\n                postalCode,\n                country\n            }))\n\n            history.push(\"/paymentMethod?redirect=paymentMethod\")\n        }\n\n\n    }\n    return (\n        <>\n            <CheckoutComp step1 step2 />\n            <FormContainer>\n                <HelmetComp title={`Shipping Address`} description=\"E Shop\" />\n\n                <h2 className=\"my-3\">Shipping Address</h2>\n                {message && <Message variant=\"danger\">{message}</Message>}\n                <Form onSubmit={addressHandler}>\n                    <Form.Group controlId=\"address\">\n                        <Form.Label>Address</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Address\"\n                            value={address}\n                            onChange={e => setAddress(e.target.value)}\n                        />\n\n                    </Form.Group>\n\n                    <Form.Group controlId=\"city\">\n                        <Form.Label>City</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter City\"\n                            value={city}\n                            onChange={e => setCity(e.target.value)}\n                        />\n\n                    </Form.Group>\n\n                    <Form.Group controlId=\"postalCode\">\n                        <Form.Label>Postal Code</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            placeholder=\"Enter Postal Code\"\n                            value={postalCode}\n                            onChange={e => setPostalCode(e.target.value)}\n                        />\n\n                    </Form.Group>\n\n                    <Form.Group controlId=\"country\">\n                        <Form.Label>Country</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Country\"\n                            value={country}\n                            onChange={e => setCountry(e.target.value)}\n                        />\n\n                    </Form.Group>\n                    {/* <Link to=\"/paymentMethod?redirect=paymentMethod\">\n                        <Button type=\"submit\" variant=\"primary\">Continue</Button>\n                    </Link> */}\n\n                    <Button type=\"submit\" variant=\"primary\">Continue</Button>\n\n                </Form>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default ShippingAddressScreen\n","export const ADD_PAYMENT_METHOD_SUCCESS = \"ADD_PAYMENT_METHOD_SUCCESS\";","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { paymentMethodAction } from '../actions/paymentActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport HelmetComp from '../components/HelmetComp';\nimport CheckoutComp from '../components/CheckoutComp';\n\nconst PaymentMethodScreen = ({ history, location }) => {\n\n    const payment = useSelector(state => state.payment)\n\n    const { paymentMethod: paymentMethodFromStore } = payment\n\n    const [paymentMethod, setPaymentMethod] = useState(paymentMethodFromStore)\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login)\n\n    const { userInfo } = login\n\n    const redirect = location.search && location.search.split(\"=\")[1]\n\n\n    useEffect(() => {\n        if (!redirect || !userInfo) {\n            history.push(\"/login\")\n        }\n\n    }, [history, redirect, userInfo])\n\n\n\n    const paymentHandler = (e) => {\n        e.preventDefault();\n        dispatch(paymentMethodAction(paymentMethod))\n        history.push(\"/createOrder?redirect=order\")\n    }\n\n\n    return (\n        <>\n            <CheckoutComp step1 step2 step3 />\n            <FormContainer>\n                <HelmetComp title={`Choose Payment`} description=\"E Shop\" />\n                <h2 className=\"my-3\">Payment Method:</h2>\n                <Form onSubmit={paymentHandler}>\n                    <Form.Group controlId=\"paymentCheckbox\">\n                        <Form.Label>Method:</Form.Label>\n                        <Form.Check\n                            type=\"checkbox\"\n                            label=\"PayPal\"\n                            checked={paymentMethod === 'PayPal'}\n                            value=\"PayPal\"\n                            id=\"PayPal\"\n                            custom\n                            onChange={e => setPaymentMethod(e.target.value)}\n                        />\n\n                        <Form.Check\n                            type=\"checkbox\"\n                            label=\"Stripe\"\n                            checked={paymentMethod === 'Stripe'}\n                            value=\"Stripe\"\n                            id=\"Stripe\"\n                            custom\n                            onChange={e => setPaymentMethod(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button type=\"submit\" variant=\"primary\">Continue</Button>\n                </Form>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default PaymentMethodScreen\n","import { ADD_PAYMENT_METHOD_SUCCESS } from '../constants/paymentConstans'\n\n\n\n\n\nexport const paymentMethodAction = (paymentMethod) => (dispatch) => {\n\n    dispatch({\n        type: ADD_PAYMENT_METHOD_SUCCESS,\n        payload: paymentMethod\n    })\n\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(paymentMethod))\n}","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\"\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\"\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\"\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\"\n\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\"\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\"\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\"\nexport const ORDER_DETAILS_RESET = \"ORDER_DETAILS_RESET\"\n\nexport const ORDER_USER_REQUEST = \"ORDER_USER_REQUEST\"\nexport const ORDER_USER_SUCCESS = \"ORDER_USER_SUCCESS\"\nexport const ORDER_USER_FAIL = \"ORDER_USER_FAIL\"\nexport const ORDER_USER_RESET = \"ORDER_USER_RESET\"\n\nexport const ORDER_ADMIN_REQUEST = \"ORDER_ADMIN_REQUEST\"\nexport const ORDER_ADMIN_SUCCESS = \"ORDER_ADMIN_SUCCESS\"\nexport const ORDER_ADMIN_FAIL = \"ORDER_ADMIN_FAIL\"\nexport const ORDER_ADMIN_RESET = \"ORDER_ADMIN_RESET\"\n\nexport const ORDER_ADMIN_UPDATE_REQUEST = \"ORDER_ADMIN_UPDATE_REQUEST\"\nexport const ORDER_ADMIN_UPDATE_SUCCESS = \"ORDER_ADMIN_UPDATE_SUCCESS\"\nexport const ORDER_ADMIN_UPDATE_FAIL = \"ORDER_ADMIN_UPDATE_FAIL\"\nexport const ORDER_ADMIN_UPDATE_RESET = \"ORDER_ADMIN_UPDATE_RESET\"\n\n","import {\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\n    ORDER_USER_REQUEST, ORDER_USER_SUCCESS, ORDER_USER_FAIL,\n    ORDER_ADMIN_REQUEST, ORDER_ADMIN_SUCCESS, ORDER_ADMIN_FAIL,\n    ORDER_ADMIN_UPDATE_REQUEST, ORDER_ADMIN_UPDATE_SUCCESS, ORDER_ADMIN_UPDATE_FAIL,\n} from '../constants/orderConstants';\nimport axios from 'axios';\n\n\nexport const createOrderAction = (order) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n\n        const { userInfo: { token } } = getState().login;\n\n        console.log(\"TOKEN\", token)\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.post(\"/api/orders/create\", order, config);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const orderDetailsAction = (id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/order/${id}`, config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\n\nexport const userOrdersAction = (page = 1) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: ORDER_USER_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/user?page=${page}`, config);\n\n        dispatch({\n            type: ORDER_USER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_USER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const adminOrdersAction = (page = 1) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: ORDER_ADMIN_REQUEST\n        });\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/admin?page=${page}`, config);\n\n        dispatch({\n            type: ORDER_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n\n}\n\n\nexport const updateOrderAction = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: ORDER_ADMIN_UPDATE_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n\n        const { data } = await axios.put(`/api/orders/${id}`, {}, config)\n\n        dispatch({\n            type: ORDER_ADMIN_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_ADMIN_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Card, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { createOrderAction } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\nimport CheckoutComp from '../components/CheckoutComp';\n\n\n\nconst PlaceOrderScreen = ({ history, location }) => {\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login;\n\n    const userAddress = useSelector(state => state.userAddress)\n    const { shippingAddress } = userAddress;\n\n    const payment = useSelector(state => state.payment);\n    const { paymentMethod } = payment;\n\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart\n\n    const createOrder = useSelector(state => state.createOrder)\n\n    const { loading, order, success, error } = createOrder\n\n    const redirect = location.search ? location.search.split(\"=\")[1] : null\n\n    cartItems.itemsPrice = Number(cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)).toFixed(2);\n    cartItems.taxPrice = Number(0.18 * cartItems.itemsPrice).toFixed(2)\n    cartItems.deliveryPrice = Number(cartItems.itemsPrice < 50 ? 20 : 0)\n    cartItems.totalPrice = (Number(cartItems.itemsPrice) + Number(cartItems.taxPrice) + Number(cartItems.deliveryPrice)).toFixed(2)\n\n\n\n    useEffect(() => {\n        if (!userInfo || !redirect) {\n            history.push(\"/login\")\n        } else {\n\n            if (success) {\n                dispatch({\n                    type: ORDER_CREATE_RESET\n                })\n                history.push(`/orderDetails/${order._id}`)\n\n            } else {\n                const buildScript = async () => {\n                    const { data: clientId } = await axios.get(\"/paypal/clientId\");\n\n                    const script = document.createElement('script');\n                    script.type = \"text/javascript\"\n                    script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n                    script.async = true;\n                    script.onload = () => {\n                        setSdkReady(true)\n                    }\n\n                    document.body.appendChild(script)\n                }\n\n                if (!window.paypal) {\n\n                    buildScript()\n                    console.log(sdkReady)\n                } else {\n                    setSdkReady(true)\n                }\n            }\n\n\n\n\n\n        }\n    }, [history, userInfo, redirect, success])\n\n\n    const createOrderHandler = (paymentResult) => {\n        dispatch(createOrderAction({\n            orderItems: cartItems,\n            paymentMethod,\n            shippingAddress,\n            paymentResult,\n            taxPrice: cartItems.taxPrice,\n            deliveryPrice: cartItems.deliveryPrice,\n            totalPrice: cartItems.totalPrice\n        }))\n\n\n    }\n\n    return (\n        <>\n            <CheckoutComp step1 step2 step3 step4 />\n            <HelmetComp title={`Place Order`} description=\"E Shop\" />\n            <Row>\n                <Col md={8}>\n                    <h1 className=\"my-3\">Order</h1>\n\n                    <Row>\n                        <Col md={6}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h4>User Details</h4>\n                                </ListGroup.Item>\n                                <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                    Name: {userInfo.name},<br></br>\n                                    Email: {userInfo.email} <br></br>\n                                    Address: {shippingAddress.address} {\" \"}, {shippingAddress.city} <br></br>\n                                    {shippingAddress.postalCode},{\" \"} {shippingAddress.country}.\n                        </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md={6}>\n                            <ListGroup variant=\"flush\" className=\"my-3\">\n                                <ListGroup.Item><h4>Payment Method:</h4></ListGroup.Item>\n\n                                <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                    Method: {paymentMethod}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md={10}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h4>Order Items:</h4>\n                                </ListGroup.Item>\n                                {cartItems.map((item) => {\n                                    return <ListGroup.Item key={item.product}>\n                                        <Row>\n                                            <Col md={2}>\n                                                <Link to={`/productDetails/${item.product}`}><Image src={item.image} alt={item.name} fluid /></Link>\n                                            </Col>\n                                            <Col md={6}>\n                                                <Link to={`/productDetails/${item.product}`}><p>{item.name}</p></Link>\n                                            </Col>\n                                            <Col md={4}>\n                                                <p>{item.qty} X $ {item.price} = $ {item.qty * item.price}</p>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                })}\n                            </ListGroup>\n\n                        </Col>\n                    </Row>\n\n                </Col>\n\n                <Col md={4}>\n\n                    <h2 className=\"my-3\">Order Total</h2>\n\n                    <Card>\n                        <ListGroup variant=\"flush\" style={{ fontSize: \"1.1rem\" }}>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Items Price:\n                                      </Col>\n                                    <Col>\n                                        $ {cartItems.itemsPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Tax Price:\n                                      </Col>\n                                    <Col>\n                                        $ {cartItems.taxPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Delivery Price:\n                                      </Col>\n                                    <Col>\n                                        $ {cartItems.deliveryPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Total Price:\n                                    </Col>\n                                    <Col>\n                                        $ {cartItems.totalPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {!sdkReady ? <Loader /> : (\n                                    <PayPalButton\n                                        amount={cartItems.totalPrice}\n                                        onSuccess={createOrderHandler}\n                                    />\n                                )}\n                            </ListGroup.Item>\n                            {error && <Message variant=\"danger\">{error}</Message>}\n                        </ListGroup>\n                    </Card>\n\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Card, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { orderDetailsAction } from '../actions/orderActions';\nimport { ORDER_DETAILS_RESET } from '../constants/orderConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\n\n\n\nconst OrderDetailsScreen = ({ history, match }) => {\n\n    const orderId = match.params.id\n\n    const dispatch = useDispatch()\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login;\n\n    const orderDetails = useSelector(state => state.orderDetails);\n\n    const { loading, orderInfo, error } = orderDetails;\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: ORDER_DETAILS_RESET\n            })\n        }\n    }, [])\n\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            if (!orderInfo || !orderInfo._id) {\n                dispatch(orderDetailsAction(orderId))\n\n\n            }\n        }\n\n    }, [dispatch, history, userInfo, orderInfo, orderId])\n\n\n\n\n    return (\n        <>\n            <HelmetComp title={`Order Details`} description=\"E Shop\" />\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <Row>\n                    <Col md={8}>\n                        <h1 className=\"my-3\">Order</h1>\n                        {(orderInfo.user) && (\n                            <Row>\n                                <Col md={6}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h4>User Details</h4>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                            Name: {orderInfo.user.name},<br></br>\n                                            Email: {orderInfo.user.email} <br></br>\n                                            Address: {orderInfo.shippingAddress.address} {\" \"}, {orderInfo.shippingAddress.city} <br></br>\n                                            {orderInfo.shippingAddress.postalCode},{\" \"} {orderInfo.shippingAddress.country}.\n                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n\n                        )}\n                        <Row>\n                            <Col md={6}>\n                                <ListGroup variant=\"flush\" className=\"my-3\">\n                                    <ListGroup.Item><h4>Payment Method:</h4></ListGroup.Item>\n\n                                    <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                        Method: {orderInfo.paymentMethod}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={6}>\n                                <ListGroup variant=\"flush\" className=\"my-3\">\n                                    <ListGroup.Item><h4>Order Status:</h4></ListGroup.Item>\n\n                                    <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                        ORDER ID : {orderInfo._id}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                        Paid By : {orderInfo.paymentMethod} {orderInfo.createdAt}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                        Delivery : {orderInfo.isDelivered ? `Delivered At ${orderInfo.deliveredAt}` : `Not Delivered`}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col md={10}>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h4>Order Items:</h4>\n                                    </ListGroup.Item>\n                                    {orderInfo.orderItems.map((item) => {\n                                        return <ListGroup.Item key={item.product}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Link to={`/productDetails/${item.product}`}><Image src={item.image} alt={item.name} fluid /></Link>\n                                                </Col>\n                                                <Col md={6}>\n                                                    <Link to={`/productDetails/${item.product}`}><p>{item.name}</p></Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    <p>{item.qty} X $ {item.price} = $ {item.qty * item.price}</p>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                    })}\n                                </ListGroup>\n\n                            </Col>\n                        </Row>\n\n                    </Col>\n\n                    <Col md={4}>\n\n                        <h2 className=\"my-3\">Order Total</h2>\n\n                        <Card>\n                            <ListGroup variant=\"flush\" style={{ fontSize: \"1.1rem\" }}>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                            Items Price:\n                                      </Col>\n                                        <Col>\n                                            $ {orderInfo.orderItems.reduce((acc, item) => acc + item.qty * item.price, 0)}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                            Tax Price:\n                                      </Col>\n                                        <Col>\n                                            $ {orderInfo.taxPrice}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                            Delivery Price:\n                                      </Col>\n                                        <Col>\n                                            $ {orderInfo.deliveryPrice}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                            Total Price:\n                                    </Col>\n                                        <Col>\n                                            $ {orderInfo.totalPrice}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                            </ListGroup>\n                        </Card>\n\n                    </Col>\n                </Row>\n            )}\n        </>\n    )\n}\n\nexport default OrderDetailsScreen\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { updateUserAction } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\nimport { ORDER_USER_RESET } from '../constants/orderConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { userOrdersAction } from '../actions/orderActions';\nimport Paginate from '../components/Paginate';\nimport HelmetComp from '../components/HelmetComp';\n\nconst UserProfileScreen = ({ history, match }) => {\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const page = match.params.page\n\n\n    const [name, setName] = useState(userInfo ? userInfo.name : \"\");\n    const [email, setEmail] = useState(userInfo ? userInfo.email : \"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const updateUser = useSelector(state => state.updateUser);\n    const { loading, success, error } = updateUser\n\n    const userOrders = useSelector(state => state.userOrders)\n    const { loading: loadingOrders, orders, pages, pageNumber, error: errorOrders } = userOrders\n\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: ORDER_USER_RESET\n            })\n        }\n    }, [])\n\n    // useEffect(() => {\n    //     dispatch(userOrdersAction(page))\n    // }, [page])\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n\n            dispatch(userOrdersAction(page))\n        }\n    }, [dispatch, history, userInfo, page])\n\n\n\n\n    const updateUserHandler = (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n            setMessage(\"Passwords Do Not Match\")\n        } else {\n            dispatch(updateUserAction({\n                name, email, password\n            }))\n            setMessage(\"\")\n        }\n\n    }\n\n    return (\n        <>\n            <HelmetComp title={`Profile || User`} description=\"E Shop\" />\n            <Row>\n                <Col md={3}>\n                    <h2 className=\"my-3\">Update Profile</h2>\n                    {message && <Message variant=\"danger\">{message}</Message>}\n                    {error && <Message variant=\"danger\">{error}</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={updateUserHandler} className=\"mr-3\">\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Name\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Enter Email\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter Password\"\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"confirmpassword\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm Password\"\n                                value={confirmPassword}\n                                onChange={e => setConfirmPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant=\"primary\">Update</Button>\n                    </Form>\n                </Col>\n\n                <Col md={9}>\n                    <h2 className=\"my-3 text-center\">Orders</h2>\n                    {loadingOrders ? <Loader /> : errorOrders ? <Message variant=\"danger\">{errorOrders}</Message> : orders && (\n                        <>\n                            <Table hover bordered responsive className=\"table-sm text-center\">\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>DATE</th>\n                                        <th>Name</th>\n                                        <th>PAID BY</th>\n                                        <th>DELIVERY</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {orders.map((order) => {\n                                        return <tr key={order._id}>\n                                            <td><Link to={`/orderDetails/${order._id}`}>{order._id}</Link></td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>{order.user.name}</td>\n                                            <td><i class=\"fab fa-cc-paypal fa-2x\" style={{ color: '#348ceb' }}></i></td>\n                                            <td>{order.isDelivered ? `Delivered` : 'Not Delivered'}</td>\n                                        </tr>\n                                    })}\n                                </tbody>\n                            </Table>\n                            <Paginate pageNumber={pageNumber} pages={pages} userOrders={true} />\n                        </>\n                    )}\n                </Col>\n\n            </Row>\n        </>\n    )\n}\n\nexport default UserProfileScreen\n","import React, { useEffect } from 'react'\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { adminOrdersAction, updateOrderAction } from '../actions/orderActions';\nimport { ORDER_ADMIN_UPDATE_RESET, ORDER_ADMIN_RESET } from '../constants/orderConstants';\nimport { Link } from 'react-router-dom'\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Paginate from '../components/Paginate';\nimport HelmetComp from '../components/HelmetComp';\n\n\n\nconst OrdersAdminScreen = ({ history, match }) => {\n    const dispatch = useDispatch();\n\n    const page = match.params.page || 1\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const adminOrders = useSelector(state => state.adminOrders);\n    const { loading, orders, pageNumber, pages, error } = adminOrders\n\n    const updateOrder = useSelector(state => state.updateOrder);\n\n    const { loading: loadingUpdate, success, error: errorUpdate } = updateOrder\n\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: ORDER_ADMIN_RESET\n            })\n        }\n    }, [])\n\n\n    useEffect(() => {\n        dispatch(adminOrdersAction(page));\n    }, [page])\n\n\n    useEffect(() => {\n\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n\n        } else {\n\n            if (success) {\n                dispatch({\n                    type: ORDER_ADMIN_UPDATE_RESET\n                })\n                dispatch(adminOrdersAction(page));\n            }\n\n\n            if (orders.length === 0) {\n                dispatch(adminOrdersAction(page));\n            }\n\n        }\n    }, [dispatch, history, orders, userInfo, success, page])\n\n\n    const updateOrderHandler = (id) => [\n        dispatch(updateOrderAction(id))\n    ]\n\n    return (\n        <>\n            <HelmetComp title={`Orders || Admin`} description=\"E Shop\" />\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <>\n                    <h2 className=\"my-3\">Orders</h2>\n                    {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                    {loadingUpdate && <Loader />}\n                    <Table hover bordered responsive className=\"table-sm text-center\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>DATE</th>\n                                <th>Name</th>\n                                <th>PAID BY</th>\n                                <th>Delivered</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order) => {\n                                return <tr key={order._id}>\n                                    <td><Link to={`/orderDetails/${order._id}`}>{order._id}</Link></td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>{order.user.name}</td>\n                                    <td><i className=\"fab fa-cc-paypal fa-2x\" style={{ color: '#348ceb' }}></i></td>\n                                    <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{ color: 'green' }}></i> :\n                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i>}</td>\n                                    <td><Button variant=\"primary\"\n                                        onClick={() => updateOrderHandler(order._id)}\n                                    >{order.isDelivered ? `Mark As Not Delivered` : `Mark As Delivered`}</Button></td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </Table>\n\n                    <Paginate pageNumber={pageNumber} pages={pages} orderAdmin={true} />\n\n                </>\n            )}\n        </>\n    )\n}\n\nexport default OrdersAdminScreen\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport { adminUsersAction, userDeleteAdminAction } from '../actions/userActions';\nimport { USERS_ADMIN_RESET, USER_ADMIN_DELETE_RESET } from '../constants/userConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport Paginate from '../components/Paginate';\nimport HelmetComp from '../components/HelmetComp';\n\nconst UsersAdminScreen = ({ history, match }) => {\n\n    const page = match.params.page || 1\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const adminUsers = useSelector(state => state.adminUsers)\n    const { loading, users, pageNumber, pages, error } = adminUsers\n\n    const userDeleteAdmin = useSelector(state => state.userDeleteAdmin)\n\n    const { loading: loadingDelete, success, error: errorDelete } = userDeleteAdmin\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: USERS_ADMIN_RESET\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        dispatch(adminUsersAction(page))\n    }, [page])\n\n\n    useEffect(() => {\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n        } else {\n\n            if (users.length === 0) {\n                dispatch(adminUsersAction(page))\n            }\n\n            if (success) {\n                dispatch({\n                    type: USER_ADMIN_DELETE_RESET\n                })\n                dispatch(adminUsersAction(page))\n            }\n\n        }\n    }, [dispatch, history, userInfo, success, page])\n\n\n\n    const userDeleteHandler = (id) => {\n        dispatch(userDeleteAdminAction(id));\n    }\n\n\n    return (\n        <>\n            <HelmetComp title={`Users || Admin`} description=\"E Shop\" />\n\n            <h2 className=\"my-3\">Users</h2>\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n                <Table hover bordered responsive className=\"table-sm text-center\">\n\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>ADMIN</th>\n                            <th></th>\n\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {users.map((user) => {\n                            return <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td>{user.email}</td>\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{ color: 'green' }}></i> :\n                                    <i className=\"fas fa-times\" style={{ color: 'green' }}></i>\n                                }</td>\n                                <td>\n                                    <Link to={`/admin/userUpdate/${user._id}?page=${page}`}>\n                                        <Button type=\"button\" className=\"btn btn-light\" >\n                                            <i className=\"fas fa-edit\"></i>\n                                        </Button>\n                                    </Link>\n\n                                    <Button type=\"button\" className=\"btn btn-danger\" onClick={() => userDeleteHandler(user._id)} >\n                                        <i className=\"fas fa-trash\"></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        })}\n                    </tbody>\n\n                </Table>\n            )}\n\n            <Paginate pageNumber={pageNumber} pages={pages} userAdmin={true} />\n        </>\n    )\n}\n\nexport default UsersAdminScreen\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { userDetailsAdminAction, userUpdateAdminAction } from '../actions/userActions';\nimport { USER_ADMIN_DETAILS_RESET, USER_ADMIN_UPDATE_RESET } from '../constants/userConstants';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport HelmetComp from '../components/HelmetComp';\n\nconst UserUpdateAdminScreen = ({ match, history, location }) => {\n\n    const userId = match.params.id\n\n    const page = location.search ? location.search.split(\"=\")[1] : 1\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login);\n    const { userInfo } = login\n\n    const userDetailsAdmin = useSelector(state => state.userDetailsAdmin);\n\n    const { loading, user, error } = userDetailsAdmin;\n\n    const userUpdateAdmin = useSelector(state => state.userUpdateAdmin)\n\n    const { loading: loadingUpdate, success, error: errorUpdate } = userUpdateAdmin\n\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [isAdmin, setIsAdmin] = useState(\"\")\n    const [message, setMessage] = useState(\"\");\n\n\n\n    useEffect(() => {\n\n        return () => {\n            dispatch({\n                type: USER_ADMIN_DETAILS_RESET\n            })\n        }\n\n    }, [])\n\n\n    useEffect(() => {\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n        } else {\n\n\n            if (!user || !user.name) {\n                dispatch(userDetailsAdminAction(userId))\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n                setIsAdmin(user.isAdmin)\n            }\n\n            if (success) {\n                dispatch({\n                    type: USER_ADMIN_UPDATE_RESET\n                })\n\n                history.push(`/admin/users/${page}`)\n            }\n\n\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n\n    const updateUserAdminHandler = (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n\n            setMessage(\"Passwords Do Not Match\")\n\n        } else {\n\n            dispatch(userUpdateAdminAction({\n                _id: userId,\n                name,\n                email,\n                password,\n                isAdmin\n            }))\n\n            setMessage(\"\")\n        }\n    }\n\n\n\n    return (\n        <>\n            <HelmetComp title={`${user.name}`} description=\"E Shop\" />\n            <Link to={`/admin/users/1`}>\n                <Button type=\"button\" variant=\"light\">Back</Button>\n            </Link>\n\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <FormContainer>\n\n                    <h2 className=\"my-3\">Update User</h2>\n\n                    {loadingUpdate && <Loader />}\n                    {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                    {message && <Message variant=\"danger\">{message}</Message>}\n\n                    <Form onSubmit={updateUserAdminHandler}>\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Name\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Enter Email\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter Password\"\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"confirmPassword\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm Password\"\n                                value={confirmPassword}\n                                onChange={e => setConfirmPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicCheckbox\" className=\"ml-3\">\n                            <Form.Check type=\"checkbox\" label=\"Is Admin\"\n                                checked={isAdmin}\n                                onChange={e => setIsAdmin(e.target.checked)}\n                            />\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant=\"primary\">Update</Button>\n\n\n\n                    </Form>\n                </FormContainer>\n            )}\n\n        </>\n    )\n}\n\nexport default UserUpdateAdminScreen\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport { productListAction, createProductAction, deleteProductAction } from '../actions/productsActions';\nimport { PRODUCT_LIST_RESET, PRODUCT_CREATE_ADMIN_RESET, PRODUCT_DELETE_ADMIN_RESET } from '../constants/productsConstants';\nimport Paginate from '../components/Paginate.js'\nimport HelmetComp from '../components/HelmetComp';\n\n\nconst ProductsAdminScreen = ({ history, match }) => {\n\n    const page = match.params.page || 1\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const productList = useSelector(state => state.productList)\n    const { loading, products, pageNumber, pages, error } = productList\n\n    const createProduct = useSelector(state => state.createProduct)\n\n    const { loading: loadingCreate, success: successCreate, error: errorCreate } = createProduct\n\n    const deleteProduct = useSelector(state => state.deleteProduct);\n    const { loading: loadingDelete, success: successDelete, error: errorDelete } = deleteProduct\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: PRODUCT_LIST_RESET\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        dispatch(productListAction('', page))\n    }, [page])\n\n\n    useEffect(() => {\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n        } else {\n\n            if (!products || products.length === 0) {\n                dispatch(productListAction('', page))\n            }\n\n            if (successCreate) {\n                dispatch({\n                    type: PRODUCT_CREATE_ADMIN_RESET\n                })\n                dispatch(productListAction('', page))\n            }\n\n            if (successDelete) {\n                dispatch({\n                    type: PRODUCT_DELETE_ADMIN_RESET\n                })\n\n                dispatch(productListAction('', page))\n            }\n\n        }\n    }, [dispatch, history, userInfo, products, successCreate, successDelete, page])\n\n\n\n    const createProductHandler = () => {\n        dispatch(createProductAction());\n    }\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProductAction(id));\n    }\n\n    return (\n        <>\n            <HelmetComp title={`Products || Admin`} description=\"E Shop\" />\n            <h2 className=\"my-3\">Products</h2>\n            <Button type=\"button\" variant=\"primary\" className=\"ml-0 my-3\" onClick={createProductHandler}><i className=\"fas fa-add\"></i> Create</Button>\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <>\n                    <Table hover bordered responsive className=\"table-sm\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Brand</th>\n                                <th>Category</th>\n                                <th>Price</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map((product) => {\n                                return <tr key={product._id}>\n                                    <td><Link to={`/productDetails/${product._id}`}>{product._id}</Link></td>\n                                    <td>{product.name}</td>\n                                    <td>{product.brand}</td>\n                                    <td>{product.category}</td>\n                                    <td>$ {product.price}</td>\n                                    <td>\n                                        <Link to={`/admin/product/edit/${product._id}?page=${page}`}>\n                                            <Button\n                                                type=\"button\"\n                                                className=\"btn btn-light\"\n                                            ><i className=\"fas fa-edit\"></i></Button>\n                                        </Link>\n\n                                        <Button\n                                            type=\"button\"\n                                            className=\"btn btn-danger\"\n                                            onClick={() => deleteProductHandler(product._id)}\n                                        ><i className=\"fas fa-trash\"></i></Button>\n                                    </td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </Table>\n                    <Paginate pageNumber={pageNumber} pages={pages} productAdmin={true} />\n                </>\n\n            )}\n        </>\n    )\n}\n\nexport default ProductsAdminScreen\n","import React, { useState, useEffect } from 'react'\nimport FormContainer from '../components/FormContainer';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { productDetailsAction, updateProductAction } from '../actions/productsActions';\nimport { PRODUCT_DETAILS_RESET, PRODUCT_UPDATE_ADMIN_RESET } from '../constants/productsConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport HelmetComp from '../components/HelmetComp';\n\nconst ProductEditScreen = ({ match, history, location }) => {\n\n    const productId = match.params.id\n\n    const page = location.search ? location.search.split(\"=\")[1] : 1\n\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [brand, setBrand] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [countInStock, setCountInStock] = useState(\"\");\n    const [uploading, setUploading] = useState(false)\n\n\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n\n    const productInfo = useSelector(state => state.productInfo);\n    const { loading, productDetails, error } = productInfo;\n\n    const updateProduct = useSelector(state => state.updateProduct)\n\n    const { loading: loadingUpdate, success, error: errorUpdate } = updateProduct\n\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: PRODUCT_DETAILS_RESET\n            })\n        }\n    }, [])\n\n\n\n    useEffect(() => {\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n        } else {\n            if (!productDetails || !productDetails.name || productDetails._id !== productId) {\n                dispatch(productDetailsAction(productId))\n            } else {\n                setName(productDetails.name)\n                setDescription(productDetails.description)\n                setCategory(productDetails.category)\n                setBrand(productDetails.brand);\n                setImage(productDetails.image);\n                setPrice(productDetails.price);\n                setCountInStock(productDetails.countInStock)\n            }\n\n\n            if (success) {\n                dispatch({\n                    type: PRODUCT_UPDATE_ADMIN_RESET\n                })\n\n                history.push(`/admin/products/${page}`)\n            }\n        }\n    }, [dispatch, history, userInfo, productDetails, success])\n\n\n\n    const updateProductHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(updateProductAction({\n            _id: productId,\n            name,\n            description,\n            category,\n            brand,\n            image,\n            price,\n            countInStock\n\n        }))\n    }\n\n\n    const uploadImageHandler = async (e) => {\n\n        e.preventDefault();\n\n        const file = e.target.files[0];\n\n        const formData = new FormData();\n\n        formData.append('image', file)\n\n        try {\n            setUploading(true);\n\n            const config = {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            }\n\n            const { data } = await axios.post(\"/api/uploads\", formData, config);\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            console.error(error);\n            setUploading(false)\n\n        }\n\n    }\n\n\n    return (\n        <>\n            <HelmetComp title={`${productDetails.name}`} description=\"E Shop\" />\n            <Link to=\"/admin/products/1\">\n                <Button type=\"button\" variant=\"light\">Back</Button>\n            </Link>\n\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <FormContainer>\n                    <h2 className=\"my-3\">Update Product</h2>\n                    {loadingUpdate && <Loader />}\n                    {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                    <Form onSubmit={updateProductHandler}>\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Name\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Description\"\n                                value={description}\n                                onChange={e => setDescription(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"category\">\n                            <Form.Label>Caetgory</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Category\"\n                                value={category}\n                                onChange={e => setCategory(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"brand\">\n                            <Form.Label>Brand</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Brand\"\n                                value={brand}\n                                onChange={e => setBrand(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"image\">\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Image\"\n                                value={image}\n                                onChange={e => setImage(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.File id=\"exampleFormControlFile1\" label=\"Upload Image\"\n                                onChange={(e) => uploadImageHandler(e)} custom\n                            />\n                        </Form.Group>\n                        {uploading && <Loader />}\n\n                        <Form.Group controlId=\"price\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"Enter Price\"\n                                value={price}\n                                onChange={e => setPrice(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"countInStock\">\n                            <Form.Label>Count In Stock</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"Enter Count In Stock\"\n                                value={countInStock}\n                                onChange={e => setCountInStock(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant=\"primary\">Update</Button>\n                    </Form>\n                </FormContainer>\n            )}\n        </>\n    )\n}\n\nexport default ProductEditScreen\n","import React from 'react';\nimport './bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomeScreen from './Screens/HomeScreen';\nimport ProductDetailsScreen from './Screens/ProductDetailsScreen';\nimport CartScreen from './Screens/CartScreen';\nimport LoginScreen from './Screens/LoginScreen';\nimport RegisterScreen from './Screens/RegisterScreen';\nimport ShippingAddressScreen from './Screens/ShippingAddressScreen';\nimport PaymentMethodScreen from './Screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen';\nimport OrderDetailsScreen from './Screens/OrderDetailsScreen';\nimport UserProfileScreen from './Screens/UserProfileScreen';\nimport OrdersAdminScreen from './Screens/OrdersAdminScreen';\nimport UsersAdminScreen from './Screens/UsersAdminScreen';\nimport UserUpdateAdminScreen from './Screens/UserUpdateAdminScreen';\nimport ProductsAdminScreen from './Screens/ProductsAdminScreen';\nimport ProductEditScreen from './Screens/ProductEditScreen';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route exact path=\"/\" component={HomeScreen} />\n          <Route exact path=\"/keywords/:keywords\" component={HomeScreen} />\n          <Route exact path=\"/keywords/:keywords/page/:page\" component={HomeScreen} />\n          <Route exact path=\"/page/:page\" component={HomeScreen} />\n          <Route exact path=\"/productDetails/:id\" component={ProductDetailsScreen} />\n          <Route exact path=\"/cart\" component={CartScreen} />\n          <Route exact path=\"/login\" component={LoginScreen} />\n          <Route exact path=\"/register\" component={RegisterScreen} />\n          <Route exact path=\"/shippingAddress\" component={ShippingAddressScreen} />\n          <Route exact path=\"/profile/:page\" component={UserProfileScreen} />\n          <Route exact path=\"/paymentMethod\" component={PaymentMethodScreen} />\n          <Route exact path=\"/createOrder\" component={PlaceOrderScreen} />\n          <Route exact path=\"/orderDetails/:id\" component={OrderDetailsScreen} />\n          <Route exact path=\"/admin/orders/:page\" component={OrdersAdminScreen} />\n          <Route exact path=\"/admin/users/:page\" component={UsersAdminScreen} />\n          <Route exact path=\"/admin/userUpdate/:id\" component={UserUpdateAdminScreen} />\n          <Route exact path=\"/admin/products/:page\" component={ProductsAdminScreen} />\n          <Route exact path=\"/admin/product/edit/:id\" component={ProductEditScreen} />\n\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport { productListReducer, productDetailsReducer, createProductReducer, deleteProductReducer, updateProductReducer, reviewProductReducer, topProductsReducer } from './reducers/productsReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { loginReducer, userRegisterReducer, userAddressReducer, updateUserReducer, adminUsersReducer, userDeleteAdminReducer, userDetailsAdminReducer, userUpdateAdminReducer } from './reducers/userReducers';\nimport { paymentReducer } from './reducers/paymentReducer';\nimport { createOrderReducer, orderDetailsReducer, userOrdersReducer, adminOrdersReducer, updateOrderReducer } from \"./reducers/orderReducers\";\n\n\n\nconst reducers = combineReducers({\n    productList: productListReducer,\n    productInfo: productDetailsReducer,\n    topProducts: topProductsReducer,\n    cart: cartReducer,\n    login: loginReducer,\n    userRegister: userRegisterReducer,\n    userAddress: userAddressReducer,\n    adminUsers: adminUsersReducer,\n    payment: paymentReducer,\n    reviewProduct: reviewProductReducer,\n    createProduct: createProductReducer,\n    deleteProduct: deleteProductReducer,\n    updateProduct: updateProductReducer,\n    createOrder: createOrderReducer,\n    orderDetails: orderDetailsReducer,\n    updateUser: updateUserReducer,\n    userOrders: userOrdersReducer,\n    userDeleteAdmin: userDeleteAdminReducer,\n    userDetailsAdmin: userDetailsAdminReducer,\n    userUpdateAdmin: userUpdateAdminReducer,\n    adminOrders: adminOrdersReducer,\n    updateOrder: updateOrderReducer\n\n})\n\n\nconst cartFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {}\n\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\") ? JSON.parse(localStorage.getItem(\"paymentMethod\")) : \"PayPal\"\n\nconst initialState = {\n    cart: { cartItems: cartFromStorage },\n    login: { userInfo: userInfoFromStorage },\n    userAddress: { shippingAddress: shippingAddressFromStorage },\n    payment: { paymentMethod: paymentMethodFromStorage }\n}\n\nconst middleware = [thunk]\n\n\n\n\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_RESET,\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_RESET,\n    PRODUCT_CREATE_ADMIN_REQUEST, PRODUCT_CREATE_ADMIN_SUCCESS, PRODUCT_CREATE_ADMIN_FAIL, PRODUCT_CREATE_ADMIN_RESET,\n    PRODUCT_DELETE_ADMIN_REQUEST, PRODUCT_DELETE_ADMIN_SUCCESS, PRODUCT_DELETE_ADMIN_FAIL, PRODUCT_DELETE_ADMIN_RESET,\n    PRODUCT_UPDATE_ADMIN_REQUEST, PRODUCT_UPDATE_ADMIN_SUCCESS, PRODUCT_UPDATE_ADMIN_FAIL, PRODUCT_UPDATE_ADMIN_RESET,\n    PRODUCT_REVIEW_REQUEST, PRODUCT_REVIEW_SUCCESS, PRODUCT_REVIEW_FAIL, PRODUCT_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL, PRODUCT_TOP_RESET\n} from '../constants/productsConstants';\n\n\n\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { ...state, loading: true }\n\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload.products, pageNumber: action.payload.pageNumber, pages: action.payload.pages }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_LIST_RESET:\n            return { products: [] }\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport const productDetailsReducer = (state = { productDetails: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, productDetails: action.payload }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_DETAILS_RESET:\n            return { productDetails: { reviews: [] } }\n\n        default:\n            return state\n    }\n}\n\n\nexport const createProductReducer = (state = { product: {} }, action) => {\n\n    switch (action.type) {\n        case PRODUCT_CREATE_ADMIN_REQUEST:\n            return { ...state, loading: false }\n\n        case PRODUCT_CREATE_ADMIN_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_ADMIN_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\n\nexport const deleteProductReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case PRODUCT_DELETE_ADMIN_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_ADMIN_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_DELETE_ADMIN_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const updateProductReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case PRODUCT_UPDATE_ADMIN_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_ADMIN_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_UPDATE_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_ADMIN_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const reviewProductReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_REVIEW_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_REVIEW_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const topProductsReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n\n        case PRODUCT_TOP_REQUEST:\n            return { ...state, loading: true }\n\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload }\n\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_TOP_RESET:\n            return { products: [] }\n\n        default:\n            return state\n    }\n}","import { CART_ADD, CART_ADD_RESET, CART_DELETE } from '../constants/cartConstants';\n\n\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n\n        case CART_ADD:\n            const itemExist = state.cartItems.find((p) => p.product === action.payload.product)\n\n            if (itemExist) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((item) => {\n                        return item.product === action.payload.product ? action.payload : item\n                    })\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, action.payload]\n                }\n            }\n\n        case CART_DELETE:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter((item) => item.product !== action.payload)\n            }\n\n        case CART_ADD_RESET:\n            return { cartItems: [] }\n\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET,\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_RESET,\n    USER_ADDRESS_SUCCESS,\n    USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET,\n    USERS_ADMIN_REQUEST, USERS_ADMIN_SUCCESS, USERS_ADMIN_FAIL, USERS_ADMIN_RESET,\n    USER_ADMIN_DELETE_REQUEST, USER_ADMIN_DELETE_SUCCESS, USER_ADMIN_DELETE_FAIL, USER_ADMIN_DELETE_RESET,\n    USER_ADMIN_DETAILS_REQUEST, USER_ADMIN_DETAILS_SUCCESS, USER_ADMIN_DETAILS_FAIL, USER_ADMIN_DETAILS_RESET,\n    USER_ADMIN_UPDATE_REQUEST, USER_ADMIN_UPDATE_SUCCESS, USER_ADMIN_UPDATE_FAIL, USER_ADMIN_UPDATE_RESET\n} from '../constants/userConstants';\n\n\n\n\nexport const loginReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGIN_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, success: true };\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_REGISTER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userAddressReducer = (state = { shippingAddress: {} }, action) => {\n    switch (action.type) {\n\n        case USER_ADDRESS_SUCCESS:\n            return { shippingAddress: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const updateUserReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const adminUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n\n        case USERS_ADMIN_REQUEST:\n            return { ...state, loading: true }\n\n        case USERS_ADMIN_SUCCESS:\n            return { loading: false, users: action.payload.users, pageNumber: action.payload.pageNumber, pages: action.payload.pages }\n\n        case USERS_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USERS_ADMIN_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\nexport const userDeleteAdminReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case USER_ADMIN_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_ADMIN_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_ADMIN_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_ADMIN_DELETE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsAdminReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case USER_ADMIN_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_ADMIN_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_ADMIN_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_ADMIN_DETAILS_RESET:\n            return { user: {} }\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateAdminReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_ADMIN_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_ADMIN_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_ADMIN_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_ADMIN_UPDATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}","import { ADD_PAYMENT_METHOD_SUCCESS } from '../constants/paymentConstans';\n\n\n\nexport const paymentReducer = (state = { paymentMethod: \"\" }, action) => {\n    switch (action.type) {\n\n        case ADD_PAYMENT_METHOD_SUCCESS:\n            return { paymentMethod: action.payload }\n\n        default:\n            return state\n    }\n}","import {\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_RESET,\n    ORDER_USER_REQUEST, ORDER_USER_SUCCESS, ORDER_USER_FAIL, ORDER_USER_RESET,\n    ORDER_ADMIN_REQUEST, ORDER_ADMIN_SUCCESS, ORDER_ADMIN_FAIL, ORDER_ADMIN_RESET,\n    ORDER_ADMIN_UPDATE_REQUEST, ORDER_ADMIN_UPDATE_SUCCESS, ORDER_ADMIN_UPDATE_FAIL, ORDER_ADMIN_UPDATE_RESET\n} from '../constants/orderConstants';\n\n\n\nexport const createOrderReducer = (state = { order: { orderItems: [] } }, action) => {\n    switch (action.type) {\n\n        case ORDER_CREATE_REQUEST:\n            return { ...state, loading: true }\n\n        case ORDER_CREATE_SUCCESS:\n            return { loading: false, order: action.payload, success: true }\n\n        case ORDER_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_CREATE_RESET:\n            return { order: { orderItems: [] } }\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { orderInfo: { orderItems: [] } }, action) => {\n    switch (action.type) {\n\n        case ORDER_DETAILS_REQUEST:\n            return { ...state, loading: true };\n\n        case ORDER_DETAILS_SUCCESS:\n            return { loading: false, orderInfo: action.payload }\n\n        case ORDER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_DETAILS_RESET:\n            return { orderInfo: { orderItems: [] } }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_USER_REQUEST:\n            return { ...state, loading: true }\n\n        case ORDER_USER_SUCCESS:\n            return { loading: false, orders: action.payload.orders, pageNumber: action.payload.pageNumber, pages: action.payload.pages }\n\n        case ORDER_USER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_USER_RESET:\n            return { orders: [] }\n        default:\n            return state\n    }\n}\n\nexport const adminOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case ORDER_ADMIN_REQUEST:\n            return { ...state, loading: true }\n\n        case ORDER_ADMIN_SUCCESS:\n            return { loading: false, orders: action.payload.orders, pageNumber: action.payload.pageNumber, pages: action.payload.pages }\n\n        case ORDER_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_ADMIN_RESET:\n            return { orders: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const updateOrderReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_ADMIN_UPDATE_REQUEST:\n            return { loading: true }\n\n        case ORDER_ADMIN_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case ORDER_ADMIN_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_ADMIN_UPDATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}