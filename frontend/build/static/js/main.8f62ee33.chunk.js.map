{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","constants/productsConstants.js","actions/productsActions.js","components/Loader.js","components/Message.js","components/Rating.js","components/Products.js","components/Paginate.js","components/CarouselComp.js","components/HelmetComp.js","Screens/HomeScreen.js","constants/cartConstants.js","actions/cartActions.js","Screens/ProductDetailsScreen.js","Screens/CartScreen.js","components/FormContainer.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","components/CheckoutComp.js","Screens/ShippingAddressScreen.js","constants/paymentConstans.js","Screens/PaymentMethodScreen.js","actions/paymentActions.js","constants/orderConstants.js","actions/orderActions.js","Screens/PlaceOrderScreen.js","Screens/OrderDetailsScreen.js","Screens/UserProfileScreen.js","Screens/OrdersAdminScreen.js","Screens/UsersAdminScreen.js","Screens/UserUpdateAdminScreen.js","Screens/ProductsAdminScreen.js","Screens/ProductEditScreen.js","App.js","store.js","reducers/productsReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/paymentReducer.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_RESET","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_ADDRESS_SUCCESS","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USERS_ADMIN_REQUEST","USERS_ADMIN_SUCCESS","USERS_ADMIN_FAIL","USERS_ADMIN_RESET","USER_ADMIN_DELETE_REQUEST","USER_ADMIN_DELETE_SUCCESS","USER_ADMIN_DELETE_FAIL","USER_ADMIN_DELETE_RESET","USER_ADMIN_DETAILS_REQUEST","USER_ADMIN_DETAILS_SUCCESS","USER_ADMIN_DETAILS_FAIL","USER_ADMIN_DETAILS_RESET","USER_ADMIN_UPDATE_REQUEST","USER_ADMIN_UPDATE_SUCCESS","USER_ADMIN_UPDATE_FAIL","USER_ADMIN_UPDATE_RESET","userAddressAction","shippingAddress","dispatch","console","log","type","payload","localStorage","setItem","JSON","stringify","adminUsersAction","page","getState","token","login","userInfo","config","headers","Authorization","axios","get","data","response","message","SearchBox","history","useState","keywords","setKeywords","Form","onSubmit","e","preventDefault","push","inline","className","Group","controlId","Control","placeholder","value","onChange","target","Button","variant","Header","useDispatch","useSelector","state","Navbar","bg","expand","Container","to","Brand","Toggle","Collapse","id","render","Nav","Link","NavDropdown","title","name","Item","href","onClick","removeItem","isAdmin","Footer","Row","Col","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_RESET","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_CREATE_ADMIN_REQUEST","PRODUCT_CREATE_ADMIN_SUCCESS","PRODUCT_CREATE_ADMIN_FAIL","PRODUCT_CREATE_ADMIN_RESET","PRODUCT_DELETE_ADMIN_REQUEST","PRODUCT_DELETE_ADMIN_SUCCESS","PRODUCT_DELETE_ADMIN_FAIL","PRODUCT_DELETE_ADMIN_RESET","PRODUCT_UPDATE_ADMIN_REQUEST","PRODUCT_UPDATE_ADMIN_SUCCESS","PRODUCT_UPDATE_ADMIN_FAIL","PRODUCT_UPDATE_ADMIN_RESET","PRODUCT_REVIEW_REQUEST","PRODUCT_REVIEW_SUCCESS","PRODUCT_REVIEW_FAIL","PRODUCT_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","PRODUCT_TOP_RESET","productListAction","productDetailsAction","Loader","Spinner","animation","role","style","width","height","display","margin","Message","children","Alert","Rating","rating","Products","product","Card","_id","Img","src","image","alt","Body","Title","as","Text","numReviews","price","Paginate","pages","pageNumber","productAdmin","userAdmin","orderAdmin","userOrders","Pagination","Array","keys","map","x","active","CarouselComp","topProducts","useEffect","loadingTop","loading","productsTop","products","errorTop","error","Carousel","Image","fluid","Caption","HelmetComp","description","Helmet","content","HomeScreen","match","params","Number","productList","md","lg","sm","xm","CART_ADD_RESET","CART_ADD","CART_DELETE","addTocartAction","cartItem","cartItems","cart","ProductDetailsScreen","qty","setQty","productId","productInfo","productDetails","reviewProduct","loadingReview","success","errorReview","setRating","comment","setComment","setMessage","ListGroup","brand","countInStock","disabled","review","post","reviewProductAction","user","Label","reviews","createdAt","substring","border","CartScreen","deleteCartHandler","deleteCartAction","length","item","toFixed","label","reduce","acc","FormContainer","span","offset","LoginScreen","email","setEmail","password","setPassword","RegisterScreen","userRegister","setName","confirmPassword","setConfirmPassword","CheckoutComp","step1","step2","step3","step4","color","ShippingAddressScreen","location","userAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","redirect","search","split","addressHandler","ADD_PAYMENT_METHOD_SUCCESS","PaymentMethodScreen","paymentMethodFromStore","payment","paymentMethod","setPaymentMethod","paymentMethodAction","Check","checked","custom","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_RESET","ORDER_USER_REQUEST","ORDER_USER_SUCCESS","ORDER_USER_FAIL","ORDER_USER_RESET","ORDER_ADMIN_REQUEST","ORDER_ADMIN_SUCCESS","ORDER_ADMIN_FAIL","ORDER_ADMIN_RESET","ORDER_ADMIN_UPDATE_REQUEST","ORDER_ADMIN_UPDATE_SUCCESS","ORDER_ADMIN_UPDATE_FAIL","ORDER_ADMIN_UPDATE_RESET","adminOrdersAction","updateOrderAction","put","PlaceOrderScreen","sdkReady","setSdkReady","createOrder","order","itemsPrice","taxPrice","deliveryPrice","totalPrice","buildScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","fontSize","amount","onSuccess","paymentResult","createOrderAction","orderItems","OrderDetailsScreen","orderId","orderDetails","orderInfo","isDelivered","deliveredAt","UserProfileScreen","updateUser","loadingOrders","orders","errorOrders","userOrdersAction","Table","hover","bordered","responsive","class","OrdersAdminScreen","adminOrders","updateOrder","loadingUpdate","errorUpdate","UsersAdminScreen","adminUsers","users","userDeleteAdmin","loadingDelete","errorDelete","userDeleteHandler","delete","userDeleteAdminAction","UserUpdateAdminScreen","userId","userDetailsAdmin","userUpdateAdmin","setIsAdmin","userUpdateAdminAction","ProductsAdminScreen","createProduct","loadingCreate","successCreate","errorCreate","deleteProduct","successDelete","deleteProductHandler","deleteProductAction","category","ProductEditScreen","setDescription","setCategory","setBrand","setImage","setPrice","setCountInStock","uploading","setUploading","updateProduct","uploadImageHandler","file","files","formData","FormData","append","File","App","exact","path","component","reducers","combineReducers","action","itemExist","find","p","filter","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8f62ee33.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGIN_RESET = \"USER_LOGIN_RESET\"\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\nexport const USER_REGISTER_RESET = \"USER_REGISTER_RESET\"\n\nexport const USER_ADDRESS_SUCCESS = \"USER_ADDRESS_SUCCESS\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\"\n\n\nexport const USERS_ADMIN_REQUEST = \"USERS_ADMIN_REQUEST\";\nexport const USERS_ADMIN_SUCCESS = \"USERS_ADMIN_SUCCESS\";\nexport const USERS_ADMIN_FAIL = \"USERS_ADMIN_FAIL\";\nexport const USERS_ADMIN_RESET = \"USERS_ADMIN_RESET\"\n\n\nexport const USER_ADMIN_DELETE_REQUEST = \"USER_ADMIN_DELETE_REQUEST\";\nexport const USER_ADMIN_DELETE_SUCCESS = \"USER_ADMIN_DELETE_SUCCESS\";\nexport const USER_ADMIN_DELETE_FAIL = \"USER_ADMIN_DELETE_FAIL\";\nexport const USER_ADMIN_DELETE_RESET = \"USER_ADMIN_DELETE_RESET\"\n\n\nexport const USER_ADMIN_DETAILS_REQUEST = \"USER_ADMIN_DETAILS_REQUEST\";\nexport const USER_ADMIN_DETAILS_SUCCESS = \"USER_ADMIN_DETAILS_SUCCESS\";\nexport const USER_ADMIN_DETAILS_FAIL = \"USER_ADMIN_DETAILS_FAIL\";\nexport const USER_ADMIN_DETAILS_RESET = \"USER_ADMIN_DETAILS_RESET\"\n\n\nexport const USER_ADMIN_UPDATE_REQUEST = \"USER_ADMIN_UPDATE_REQUEST\";\nexport const USER_ADMIN_UPDATE_SUCCESS = \"USER_ADMIN_UPDATE_SUCCESS\";\nexport const USER_ADMIN_UPDATE_FAIL = \"USER_ADMIN_UPDATE_FAIL\";\nexport const USER_ADMIN_UPDATE_RESET = \"USER_ADMIN_UPDATE_RESET\"\n\n\n","import axios from 'axios';\nimport {\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET,\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\n    USER_ADDRESS_SUCCESS,\n    USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL,\n    USERS_ADMIN_REQUEST, USERS_ADMIN_SUCCESS, USERS_ADMIN_FAIL,\n    USER_ADMIN_DELETE_REQUEST, USER_ADMIN_DELETE_SUCCESS, USER_ADMIN_DELETE_FAIL,\n    USER_ADMIN_DETAILS_REQUEST, USER_ADMIN_DETAILS_SUCCESS, USER_ADMIN_DETAILS_FAIL,\n    USER_ADMIN_UPDATE_REQUEST, USER_ADMIN_UPDATE_SUCCESS, USER_ADMIN_UPDATE_FAIL,\n} from '../constants/userConstants';\n\n\n\n\n\nexport const userRegisterAction = (user) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n\n        const { data } = await axios.post('/api/users/register', user, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const loginAction = (user) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', user, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const logoutAction = () => (dispatch) => {\n    localStorage.removeItem(\"userInfo\");\n\n    dispatch({\n        type: USER_LOGIN_RESET\n    })\n}\n\n\n\n\nexport const userAddressAction = (shippingAddress) => (dispatch) => {\n\n    console.log(\"INSIDE ACTION\")\n\n    dispatch({\n        type: USER_ADDRESS_SUCCESS,\n        payload: shippingAddress\n    });\n\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(shippingAddress));\n\n}\n\n\n\nexport const updateUserAction = (user) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/update`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\n\n    } catch (error) {\n\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n\n    }\n}\n\n\n\nexport const adminUsersAction = (page = 1) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USERS_ADMIN_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/admin?page=${page}`, config)\n\n        dispatch({\n            type: USERS_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USERS_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const userDeleteAdminAction = (id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_ADMIN_DELETE_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/users/user/${id}`, config)\n\n        dispatch({\n            type: USER_ADMIN_DELETE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_ADMIN_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const userDetailsAdminAction = (id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_ADMIN_DETAILS_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/admin/${id}`, config);\n\n        dispatch({\n            type: USER_ADMIN_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_ADMIN_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const userUpdateAdminAction = (user) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_ADMIN_UPDATE_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/admin/${user._id}`, user, config)\n\n        dispatch({\n            type: USER_ADMIN_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_ADMIN_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n\n    const [keywords, setKeywords] = useState(\"\");\n\n\n    const searchHandler = (e) => {\n        e.preventDefault();\n\n        if (keywords) {\n            history.push(`/keywords/${keywords}`)\n\n        } else {\n            history.push(\"/\")\n        }\n    }\n\n\n    return (\n        <Form onSubmit={searchHandler} inline className=\"m-auto\">\n            <Form.Group controlId=\"serchbox\">\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Search Products ...\"\n                    value={keywords}\n                    onChange={e => setKeywords(e.target.value)}\n                />\n            </Form.Group>\n            <Button type=\"submit\" variant=\"info\" className=\"m-3\">Search</Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from '../actions/userActions';\nimport SearchBox from '../components/SearchBox';\nimport { Route } from 'react-router-dom';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login);\n\n    const { userInfo } = login\n\n    return (\n        <header className=\"mb-3\">\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>E Shop</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Route render={({ history }) => <SearchBox history={history} />} />\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to=\"/cart\">\n                                <Nav.Link>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {!userInfo ? (<LinkContainer to=\"/login\">\n                                <Nav.Link>Sign In</Nav.Link>\n                            </LinkContainer>) : (\n                                    <NavDropdown title={userInfo.name} id=\"basic-nav-dropdown\">\n                                        <LinkContainer to=\"/profile/1\">\n                                            <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <NavDropdown.Item onClick={() => dispatch(logoutAction())} >Logout</NavDropdown.Item>\n\n                                    </NavDropdown>\n                                )}\n\n                            {(userInfo && userInfo.isAdmin) && (\n                                <NavDropdown title=\"Admin\" id=\"basic-nav-dropdown2\">\n                                    <LinkContainer to=\"/admin/users/1\">\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to=\"/admin/products/1\">\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to=\"/admin/orders/1\">\n                                        <NavDropdown.Item >Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Row, Col, Container } from 'react-bootstrap';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row >\n                    <Col className=\"text-center my-3\">\n                        copyrights &copy; Eshop\n                 </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\"\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\"\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\"\nexport const PRODUCT_LIST_RESET = \"PRODUCT_LIST_RESET\"\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\"\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\nexport const PRODUCT_DETAILS_RESET = \"PRODUCT_DETAILS_RESET\"\n\nexport const PRODUCT_CREATE_ADMIN_REQUEST = \"PRODUCT_CREATE_ADMIN_REQUEST\"\nexport const PRODUCT_CREATE_ADMIN_SUCCESS = \"PRODUCT_CREATE_ADMIN_SUCCESS\"\nexport const PRODUCT_CREATE_ADMIN_FAIL = \"PRODUCT_CREATE_ADMIN_FAIL\"\nexport const PRODUCT_CREATE_ADMIN_RESET = \"PRODUCT_CREATE_ADMIN_RESET\"\n\nexport const PRODUCT_DELETE_ADMIN_REQUEST = \"PRODUCT_DELETE_ADMIN_REQUEST\"\nexport const PRODUCT_DELETE_ADMIN_SUCCESS = \"PRODUCT_DELETE_ADMIN_SUCCESS\"\nexport const PRODUCT_DELETE_ADMIN_FAIL = \"PRODUCT_DELETE_ADMIN_FAIL\"\nexport const PRODUCT_DELETE_ADMIN_RESET = \"PRODUCT_DELETE_ADMIN_RESET\"\n\nexport const PRODUCT_UPDATE_ADMIN_REQUEST = \"PRODUCT_UPDATE_ADMIN_REQUEST\"\nexport const PRODUCT_UPDATE_ADMIN_SUCCESS = \"PRODUCT_UPDATE_ADMIN_SUCCESS\"\nexport const PRODUCT_UPDATE_ADMIN_FAIL = \"PRODUCT_UPDATE_ADMIN_FAIL\"\nexport const PRODUCT_UPDATE_ADMIN_RESET = \"PRODUCT_UPDATE_ADMIN_RESET\"\n\nexport const PRODUCT_REVIEW_REQUEST = \"PRODUCT_REVIEW_REQUEST\"\nexport const PRODUCT_REVIEW_SUCCESS = \"PRODUCT_REVIEW_SUCCESS\"\nexport const PRODUCT_REVIEW_FAIL = \"PRODUCT_REVIEW_FAIL\"\nexport const PRODUCT_REVIEW_RESET = \"PRODUCT_REVIEW_RESET\"\n\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\"\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\"\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\"\nexport const PRODUCT_TOP_RESET = \"PRODUCT_TOP_RESET\"\n\n","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_CREATE_ADMIN_REQUEST,\n    PRODUCT_CREATE_ADMIN_SUCCESS,\n    PRODUCT_CREATE_ADMIN_FAIL,\n    PRODUCT_DELETE_ADMIN_REQUEST,\n    PRODUCT_DELETE_ADMIN_SUCCESS,\n    PRODUCT_DELETE_ADMIN_FAIL,\n    PRODUCT_UPDATE_ADMIN_REQUEST, PRODUCT_UPDATE_ADMIN_SUCCESS, PRODUCT_UPDATE_ADMIN_FAIL,\n    PRODUCT_REVIEW_REQUEST, PRODUCT_REVIEW_SUCCESS, PRODUCT_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL,\n} from '../constants/productsConstants';\n\nimport axios from 'axios';\n\n\n\n\nexport const productListAction = (keywords = '', page = 1) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_LIST_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/products/all?keywords=${keywords}&page=${page}`);\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const productDetailsAction = (id) => async (dispatch) => {\n\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST\n        });\n\n        const { data } = await axios.get(`/api/products/get/${id}`);\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const createProductAction = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_CREATE_ADMIN_REQUEST\n        });\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.post(\"/api/products/create\", {}, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const deleteProductAction = (id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_DELETE_ADMIN_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/products/${id}`, config)\n\n        dispatch({\n            type: PRODUCT_DELETE_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const updateProductAction = (product) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_UPDATE_ADMIN_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\n\n        dispatch({\n            type: PRODUCT_UPDATE_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const reviewProductAction = (productId, review) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_REVIEW_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n\n        const { data } = await axios.post(`/api/products/review/${productId}`, review, config)\n\n        dispatch({\n            type: PRODUCT_REVIEW_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_REVIEW_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const topProductsAction = () => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: PRODUCT_TOP_REQUEST\n        })\n\n        const { data } = await axios.get(\"/api/products/top\")\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n\n    }\n}","import React from 'react';\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner\n            animation=\"border\"\n            role=\"status\"\n            style={{ width: '100px', height: '100px', display: \"block\", margin: 'auto' }}\n        >\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\n\nconst Rating = ({ rating }) => {\n    return (\n        <>\n            {rating >= 1 ? (<i className=\"fas fa-star\"></i>) : rating >= 0.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n            {rating >= 2 ? (<i className=\"fas fa-star\"></i>) : rating >= 1.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n            {rating >= 3 ? (<i className=\"fas fa-star\"></i>) : rating >= 2.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n            {rating >= 4 ? (<i className=\"fas fa-star\"></i>) : rating >= 3.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n            {rating >= 5 ? (<i className=\"fas fa-star\"></i>) : rating >= 4.5 ?\n                (<i className=\"fas fa-star-half-alt\"></i>) : (<i className=\"far fa-star\"></i>)}\n\n        </>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Rating from './Rating';\nimport { Link } from 'react-router-dom';\n\nconst Products = ({ product }) => {\n    return (\n        <Card className=\"p-2\">\n            <Link to={`/productDetails/${product._id}`}>\n                <Card.Img src={product.image} alt={product.name} variant=\"top\" />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/productDetails/${product._id}`}>\n                    <Card.Title as=\"div\" className=\"my-2\">{product.name}</Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\" className=\"py-2\">\n                    <Rating rating={product.rating} /> ({product.numReviews})\n                </Card.Text>\n                <Card.Text as=\"h3\"><strong>${product.price}</strong></Card.Text>\n\n            </Card.Body>\n        </Card >\n    )\n}\n\nexport default Products\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, pageNumber = 1, keywords = \"\", productAdmin = false, userAdmin = false, orderAdmin = false, userOrders = false }) => {\n    return (\n        <>\n            {(!productAdmin && !userAdmin && !orderAdmin && !userOrders) && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={keywords === \"\" ? `/page/${x + 1}` : `/keywords/${keywords}/page/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n\n            {productAdmin && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={`/admin/products/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n\n            {userAdmin && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={`/admin/users/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n\n            {orderAdmin && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={`/admin/orders/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n\n            {userOrders && (\n                <Pagination>\n                    {[...Array(pages).keys()].map((x) => {\n                        return <LinkContainer to={`/profile/${x + 1}`}>\n                            <Pagination.Item key={x + 1} active={x + 1 === pageNumber} value={x + 1}>\n                                {x + 1}\n                            </Pagination.Item>\n                        </LinkContainer>\n                    })}\n                </Pagination>\n            )}\n        </>\n    )\n}\n\nexport default Paginate\n","import React, { useEffect } from 'react'\nimport { Carousel, Image } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { topProductsAction } from '../actions/productsActions';\nimport Loader from './Loader';\nimport Message from './Message';\nimport { Link } from \"react-router-dom\"\nconst CarouselComp = () => {\n\n    const dispatch = useDispatch()\n\n    const topProducts = useSelector(state => state.topProducts)\n\n    useEffect(() => {\n        dispatch(topProductsAction())\n    }, [])\n\n    const { loading: loadingTop, products: productsTop, error: errorTop } = topProducts\n    return (\n        <>\n            {loadingTop ? <Loader /> : errorTop ? <Message variant=\"danger\">{errorTop}</Message> : (\n                <Carousel className=\"bg-dark\" variant=\"dark\">\n                    {productsTop.map((product) => {\n                        return <Carousel.Item key={product._id}>\n                            <Link to={`/productDetails/${product._id}`}>\n                                <Image src={product.image} alt={product.name} fluid />\n                            </Link>\n\n                            <Link to={`/productDetails/${product._id}`}>\n                                <Carousel.Caption>\n                                    <h3>{product.name} (${product.price})</h3>\n                                </Carousel.Caption>\n                            </Link>\n\n\n                        </Carousel.Item>\n                    })}\n                </Carousel>\n            )}\n\n        </>\n    )\n}\n\nexport default CarouselComp\n","import React from 'react'\nimport { Helmet } from \"react-helmet\";\n\nconst HelmetComp = ({ title, description }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n        </Helmet>\n    )\n}\n\nexport default HelmetComp\n","import React, { useEffect } from 'react'\nimport { Row, Col, Card, Button, Carousel } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { productListAction } from '../actions/productsActions';\nimport { PRODUCT_LIST_RESET } from '../constants/productsConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Products from '../components/Products';\nimport Paginate from '../components/Paginate';\nimport CarouselComp from '../components/CarouselComp';\nimport HelmetComp from '../components/HelmetComp';\n\nconst HomeScreen = ({ match }) => {\n\n    const keywords = match.params.keywords || ''\n\n    const page = Number(match.params.page || 1)\n\n    const dispatch = useDispatch();\n    const productList = useSelector(state => state.productList);\n    const { loading, products, pageNumber, pages, error } = productList;\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: PRODUCT_LIST_RESET\n            })\n        }\n    }, [])\n\n\n\n    useEffect(() => {\n        dispatch(productListAction(keywords, page))\n    }, [dispatch, keywords, page])\n\n\n    return (\n        <>\n            <HelmetComp title={`E Shop || Home Page`} description=\"E Shop\" />\n            <CarouselComp />\n            <h2 className=\"my-3  \">Latest Products</h2>\n\n\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <>\n                    <Row>\n                        {products.map((product) => {\n                            return <Col md={4} lg={3} sm={6} xm={12} className=\"py-3\" key={product._id}>\n                                <Products product={product} />\n                            </Col>\n                        })}\n                    </Row>\n                    <Paginate pageNumber={pageNumber} pages={pages} keywords={keywords} />\n                </>\n            )}\n\n        </>\n    )\n}\n\nexport default HomeScreen\n","export const CART_ADD_RESET = \"CART_ADD_RESET\"\nexport const CART_ADD = \"CART_ADD\"\nexport const CART_DELETE = \"CART_DELETE\"\n","import { CART_ADD, CART_ADD_RESET, CART_DELETE } from '../constants/cartConstants';\n\n\n\nexport const addTocartAction = (cartItem) => (dispatch, getState) => {\n\n    console.log(\"cartItem\", cartItem)\n\n    dispatch({\n        type: CART_ADD,\n        payload: cartItem\n    });\n\n    const cart = getState().cart;\n    const { cartItems } = cart\n\n\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n}\n\n\n\nexport const deleteCartAction = (id) => (dispatch, getState) => {\n\n    dispatch({\n        type: CART_DELETE,\n        payload: id\n    })\n\n    const cart = getState().cart;\n\n    const { cartItems } = cart;\n\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems))\n}","import React, { useState, useEffect } from 'react';\nimport { productDetailsAction, reviewProductAction } from '../actions/productsActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Button, Card, Image, Form } from 'react-bootstrap';\nimport { addTocartAction } from '../actions/cartActions';\nimport { PRODUCT_DETAILS_RESET, PRODUCT_REVIEW_RESET } from '../constants/productsConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Rating from '../components/Rating';\nimport { Link } from 'react-router-dom';\nimport HelmetComp from '../components/HelmetComp';\n\n\nconst ProductDetailsScreen = ({ match, history }) => {\n\n    const [qty, setQty] = useState(1)\n\n    const productId = match.params.id\n\n    const dispatch = useDispatch();\n\n    const productInfo = useSelector(state => state.productInfo)\n    const { loading, productDetails, error } = productInfo;\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const reviewProduct = useSelector(state => state.reviewProduct)\n\n    const { loading: loadingReview, success, error: errorReview } = reviewProduct\n\n\n    const [rating, setRating] = useState(\"\");\n    const [comment, setComment] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: PRODUCT_DETAILS_RESET\n            })\n        }\n    }, [])\n\n\n    useEffect(() => {\n        if (!productDetails || !productDetails.name || productDetails._id !== productId) {\n            dispatch(productDetailsAction(productId))\n        }\n\n        if (success) {\n            dispatch({\n                type: PRODUCT_REVIEW_RESET\n            })\n\n            dispatch(productDetailsAction(productId))\n        }\n\n\n    }, [dispatch, productId, productDetails, success])\n\n\n\n    const addToCartHandler = () => {\n        const cartItem = {\n            product: productId,\n            name: productDetails.name,\n            image: productDetails.image,\n            qty: Number(qty),\n            price: productDetails.price,\n            countInStock: productDetails.countInStock\n        }\n\n        dispatch(addTocartAction(cartItem))\n\n        history.push(\"/cart\")\n\n    }\n\n\n\n    const reviewSubmitHandler = (e) => {\n        e.preventDefault();\n\n        if (!rating || !comment) {\n            setMessage(\"Rating and Comment Both Are Mandatory\")\n        } else {\n\n            dispatch(reviewProductAction(productId, {\n                user: userInfo._id,\n                name: userInfo.name,\n                rating,\n                comment\n            }))\n            setMessage(\"\")\n            setRating(\"\")\n            setComment(\"\")\n        }\n\n    }\n\n    return (\n        <>\n            <HelmetComp title={productDetails.name} description=\"E Shop\" />\n            <h2 className=\"text-center py-3\">Product Details</h2>\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <>\n                    <Row className=\"my-3 py-3\">\n                        <Col md={5}>\n                            <Image src={productDetails.image} alt={productDetails.name} fluid />\n                        </Col>\n\n                        <Col md={4}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item as=\"h3\">\n                                    {productDetails.name}\n                                </ListGroup.Item>\n                                <ListGroup.Item as=\"p\">\n                                    Brand: {productDetails.brand}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Rating rating={productDetails.rating} /> Rating from ({productDetails.numReviews}) Reviews\n                            </ListGroup.Item>\n                                <ListGroup.Item as=\"p\">\n                                    Product Code:  {productDetails._id}\n                                </ListGroup.Item>\n                                <ListGroup.Item as=\"h5\">\n                                    Description: {productDetails.description}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n\n                        <Col md={3}>\n                            <Card>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                Price:\n                                     </Col>\n\n                                            <Col>\n                                                ${productDetails.price}\n                                            </Col>\n\n                                        </Row>\n\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                Status:\n                                     </Col>\n\n                                            <Col>\n                                                {productDetails.countInStock === 0 ? `Out Of Stock` : `In Stock`}\n                                            </Col>\n\n                                        </Row>\n\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                Qty:\n                                       </Col>\n\n                                            <Col>\n                                                <Form>\n                                                    <Form.Group controlId=\"qty\">\n                                                        <Form.Control\n                                                            as=\"select\"\n                                                            onChange={e => setQty(e.target.value)}\n                                                        >\n                                                            <option>select</option>\n                                                            {[...Array(productDetails.countInStock).keys()].map((x) => {\n                                                                return <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                            })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n                                                </Form>\n                                            </Col>\n\n                                        </Row>\n\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Button type=\"button\" variant=\"primary\" className=\"btn btn-block\"\n                                            disabled={productDetails.countInStock === 0}\n                                            onClick={addToCartHandler}\n                                        >Add To Cart</Button>\n                                    </ListGroup.Item>\n\n                                </ListGroup>\n                            </Card>\n                        </Col>\n\n                    </Row>\n\n                    <Row>\n                        <Col md={4}>\n                            {userInfo ? (\n                                <>\n                                    <h2 className=\"my-3\"> Write A Review</h2>\n                                    {message && <Message variant=\"danger\">{message}</Message>}\n                                    {errorReview && <Message variant=\"danger\">{errorReview}</Message>}\n                                    {loadingReview && <Loader />}\n                                    <Form onSubmit={reviewSubmitHandler}>\n                                        <Form.Group controlId=\"rating\">\n                                            <Form.Label>Rating:</Form.Label>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={rating}\n                                                onChange={e => setRating(e.target.value)}\n                                            >\n                                                <option>Select...</option>\n                                                <option value=\"1\">1 Poor</option>\n                                                <option value=\"2\">2 Fair</option>\n                                                <option value=\"3\">3 Good</option>\n                                                <option value=\"4\">4 Very Good</option>\n                                                <option value=\"5\">5 Excellent</option>\n\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"comment\">\n                                            <Form.Label>Comment</Form.Label>\n                                            <Form.Control\n                                                as=\"textarea\"\n                                                value={comment}\n                                                onChange={e => setComment(e.target.value)}\n                                            />\n                                        </Form.Group>\n\n                                        <Button type=\"submit\" variant=\"primary\">Submit</Button>\n\n                                    </Form>\n                                </>\n                            ) : (\n                                    <h4 className=\"my-3\"> <Link to=\"/login\">Log In</Link> to write a review </h4>\n                                )}\n                        </Col>\n                        <Col md={2}></Col>\n                        <Col md={6}>\n                            <h2 className=\"my-3\">Customer Reviews</h2>\n\n                            {productDetails.reviews.map((review) => {\n                                return <div key={review._id} className=\"py-3\">\n                                    <Rating rating={review.rating} /> <br></br>\n                                    {review.name} <br />\n                                    {review.createdAt.substring(0, 10)}\n\n                                    <h4 className=\"mt-3\">{review.comment}</h4>\n                                    <div style={{ border: \"1px solid gray\" }}></div>\n                                </div>\n                            })}\n\n\n                        </Col>\n                    </Row>\n                </>\n            )}\n\n\n        </>\n    )\n}\n\nexport default ProductDetailsScreen\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Card, ListGroup, Button, Image, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { addTocartAction, deleteCartAction } from '../actions/cartActions';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\n\n\nconst CartScreen = () => {\n\n    // const [qty, setQty] = useState(1)\n\n    const dispatch = useDispatch();\n\n    const cart = useSelector(state => state.cart);\n\n    const { cartItems } = cart\n\n\n\n    const deleteCartHandler = (id) => {\n        dispatch(deleteCartAction(id))\n    }\n\n    return (\n        <>\n            <HelmetComp title={`Cart`} description=\"E Shop\" />\n            {cartItems.length === 0 ? (\n                <Message>You Cart Is Empty <Link to=\"/\">Go Back</Link></Message>\n            ) : (\n                    <Row>\n                        <Col md={9}>\n                            <h2 className=\"py-3\">Cart</h2>\n                            <ListGroup variant=\"flush\">\n                                {cartItems.map((item) => {\n                                    return <ListGroup.Item key={item.product}>\n                                        <Row>\n                                            <Col md={2}>\n                                                <Link to={`/productDetails/${item.product}`}>\n                                                    <Image src={item.image} alt={item.name} fluid />\n                                                </Link>\n\n                                            </Col>\n\n                                            <Col md={3}>\n                                                <Link to={`/productDetails/${item.product}`}>\n                                                    <h6>{item.name}</h6>\n                                                </Link>\n                                            </Col>\n\n                                            <Col md={3}>\n                                                <h6>{item.qty} X $ {item.price} = ${(item.qty * item.price).toFixed(2)}</h6>\n                                            </Col>\n\n                                            <Col md={2}>\n                                                <Form>\n                                                    <Form.Group controlId=\"updateCart\">\n                                                        <Form.Control\n                                                            as=\"select\"\n                                                            label=\"qty\"\n                                                            onChange={e => dispatch(addTocartAction({ ...item, qty: Number(e.target.value) }))}\n                                                        >\n                                                            <option>Qty</option>\n                                                            {[...Array(item.countInStock).keys()].map((x) => {\n                                                                return <option value={x + 1} key={x + 1}>{x + 1}</option>\n                                                            })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n                                                </Form>\n                                            </Col>\n\n                                            <Col md={2} className=\"text-center\">\n                                                <i className=\"far fa-trash-alt fa-2x\" onClick={() => deleteCartHandler(item.product)}></i>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                })}\n\n                            </ListGroup>\n                        </Col>\n\n                        <Col md={3}>\n                            <h2 className=\"py-3\">Cart Total</h2>\n                            <Card>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h4>Total Items ({cartItems.length})</h4>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <h4>Total Quantity ({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h4>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>\n                                                <h4>Total:</h4>\n                                            </Col>\n\n                                            <Col>\n                                                <h4> ${cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)}</h4>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Link to=\"/shippingAddress?redirect=shipping\">\n                                            <Button variant=\"primary\" className=\"btn btn-block\">Checkout</Button>\n                                        </Link>\n                                    </ListGroup.Item>\n\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                )}\n        </>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Row, Col, Container } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Row>\n\n            <Col md={{ span: 6, offset: 3 }}>\n                {children}\n            </Col>\n        </Row>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport FormContainer from '../components/FormContainer';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loginAction } from '../actions/userActions';\nimport { Link } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\n\nconst LoginScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n    const login = useSelector(state => state.login);\n\n    const { loading, userInfo, error } = login\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(\"/\");\n        }\n    }, [userInfo])\n\n    const loginHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(loginAction({ email, password }))\n    }\n\n\n    return (\n\n        <FormContainer>\n            <HelmetComp title={`Log In`} description=\"E Shop\" />\n            <h2 className=\"my-3\">Sign In</h2>\n            {loading && <Loader />}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            <Form onSubmit={loginHandler}>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter Email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Enter Password\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\" >\n                    Log In\n                </Button>\n            </Form>\n            <p className=\"py-3\">New User ? <Link to=\"/register\">Register Here</Link></p>\n        </FormContainer>\n\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react';\nimport FormContainer from '../components/FormContainer';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userRegisterAction } from '../actions/userActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\n\n\n\n\nconst RegisterScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const { loading, success, error } = userRegister;\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(\"/\")\n        }\n    }, [userInfo])\n\n\n    const registerHandler = (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n            setMessage(\"Passwords Do Not Match\")\n        } else {\n            setMessage('');\n\n            dispatch(userRegisterAction({\n                name,\n                email,\n                password\n            }))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <HelmetComp title={`Sign Up`} description=\"E Shop\" />\n\n            <h2 className=\"my-3\">Sign Up</h2>\n            {loading && <Loader />}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {message && <Message variant=\"danger\">{message}</Message>}\n            <Form onSubmit={registerHandler}>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Enter Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmpassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">Register</Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\n\nconst CheckoutComp = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Row className=\"my-4\">\n\n            <Col md={2}></Col>\n\n\n            <span>\n                {step1 ? (\n                    <h5 style={{ color: \"green\" }} className=\"mr-3\">User Logged In &#10230;</h5>\n                ) : (\n                        <h5 className=\"mr-3\">User Logged In &#10230;</h5>\n                    )}\n            </span>\n\n            <span >\n                {step2 ? (\n                    <h5 style={{ color: \"green\" }} className=\"mr-3\">Shipping Address &#10230;</h5>\n                ) : (\n                        <h5 className=\"mr-3\">Shipping Address &#10230;</h5>\n                    )}\n            </span>\n\n            <span>\n                {step3 ? (\n                    <h5 style={{ color: \"green\" }} className=\"mr-3\">Payment Method &#10230;</h5>\n                ) : (\n                        <h5 className=\"mr-3\">Payment Method &#10230;</h5>\n                    )}\n            </span>\n\n            <span>\n                {step4 ? (\n                    <h5 style={{ color: \"green\" }} className=\"mr-3\">Place Order   </h5>\n                ) : (\n                        <h5 className=\"mr-3\">Place Order</h5>\n                    )}\n            </span>\n\n\n            <Col md={2}></Col>\n        </Row>\n\n    )\n}\n\nexport default CheckoutComp\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { Link } from 'react-router-dom';\nimport { userAddressAction } from '../actions/userActions';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\nimport CheckoutComp from '../components/CheckoutComp';\n\nconst ShippingAddressScreen = ({ history, location }) => {\n\n    const userAddress = useSelector(state => state.userAddress);\n\n    const { shippingAddress } = userAddress;\n\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country)\n    const [message, setMessage] = useState(\"\");\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const redirect = location.search && location.search.split(\"=\")[1]\n\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if (!redirect || !userInfo) {\n            history.push(\"/login\")\n        }\n    }, [history, redirect, userInfo])\n\n\n\n\n\n    const addressHandler = async (e) => {\n\n        e.preventDefault();\n\n\n\n        if (!address || !city || !postalCode || !country) {\n            setMessage(\"All Fields Are Mandatory\")\n        } else {\n\n            setMessage(\"\");\n\n            await dispatch(userAddressAction({\n                address,\n                city,\n                postalCode,\n                country\n            }))\n\n            history.push(\"/paymentMethod?redirect=paymentMethod\")\n        }\n\n\n    }\n    return (\n        <>\n            <CheckoutComp step1 step2 />\n            <FormContainer>\n                <HelmetComp title={`Shipping Address`} description=\"E Shop\" />\n\n                <h2 className=\"my-3\">Shipping Address</h2>\n                {message && <Message variant=\"danger\">{message}</Message>}\n                <Form onSubmit={addressHandler}>\n                    <Form.Group controlId=\"address\">\n                        <Form.Label>Address</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Address\"\n                            value={address}\n                            onChange={e => setAddress(e.target.value)}\n                        />\n\n                    </Form.Group>\n\n                    <Form.Group controlId=\"city\">\n                        <Form.Label>City</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter City\"\n                            value={city}\n                            onChange={e => setCity(e.target.value)}\n                        />\n\n                    </Form.Group>\n\n                    <Form.Group controlId=\"postalCode\">\n                        <Form.Label>Postal Code</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            placeholder=\"Enter Postal Code\"\n                            value={postalCode}\n                            onChange={e => setPostalCode(e.target.value)}\n                        />\n\n                    </Form.Group>\n\n                    <Form.Group controlId=\"country\">\n                        <Form.Label>Country</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Country\"\n                            value={country}\n                            onChange={e => setCountry(e.target.value)}\n                        />\n\n                    </Form.Group>\n                    {/* <Link to=\"/paymentMethod?redirect=paymentMethod\">\n                        <Button type=\"submit\" variant=\"primary\">Continue</Button>\n                    </Link> */}\n\n                    <Button type=\"submit\" variant=\"primary\">Continue</Button>\n\n                </Form>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default ShippingAddressScreen\n","export const ADD_PAYMENT_METHOD_SUCCESS = \"ADD_PAYMENT_METHOD_SUCCESS\";","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { paymentMethodAction } from '../actions/paymentActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport HelmetComp from '../components/HelmetComp';\nimport CheckoutComp from '../components/CheckoutComp';\n\nconst PaymentMethodScreen = ({ history, location }) => {\n\n    const payment = useSelector(state => state.payment)\n\n    const { paymentMethod: paymentMethodFromStore } = payment\n\n    const [paymentMethod, setPaymentMethod] = useState(paymentMethodFromStore)\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login)\n\n    const { userInfo } = login\n\n    const redirect = location.search && location.search.split(\"=\")[1]\n\n\n    useEffect(() => {\n        if (!redirect || !userInfo) {\n            history.push(\"/login\")\n        }\n\n    }, [history, redirect, userInfo])\n\n\n\n    const paymentHandler = (e) => {\n        e.preventDefault();\n        dispatch(paymentMethodAction(paymentMethod))\n        history.push(\"/createOrder?redirect=order\")\n    }\n\n\n    return (\n        <>\n            <CheckoutComp step1 step2 step3 />\n            <FormContainer>\n                <HelmetComp title={`Choose Payment`} description=\"E Shop\" />\n                <h2 className=\"my-3\">Payment Method:</h2>\n                <Form onSubmit={paymentHandler}>\n                    <Form.Group controlId=\"paymentCheckbox\">\n                        <Form.Label>Method:</Form.Label>\n                        <Form.Check\n                            type=\"checkbox\"\n                            label=\"PayPal\"\n                            checked={paymentMethod === 'PayPal'}\n                            value=\"PayPal\"\n                            id=\"PayPal\"\n                            custom\n                            onChange={e => setPaymentMethod(e.target.value)}\n                        />\n\n                        <Form.Check\n                            type=\"checkbox\"\n                            label=\"Stripe\"\n                            checked={paymentMethod === 'Stripe'}\n                            value=\"Stripe\"\n                            id=\"Stripe\"\n                            custom\n                            onChange={e => setPaymentMethod(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Button type=\"submit\" variant=\"primary\">Continue</Button>\n                </Form>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default PaymentMethodScreen\n","import { ADD_PAYMENT_METHOD_SUCCESS } from '../constants/paymentConstans'\n\n\n\n\n\nexport const paymentMethodAction = (paymentMethod) => (dispatch) => {\n\n    dispatch({\n        type: ADD_PAYMENT_METHOD_SUCCESS,\n        payload: paymentMethod\n    })\n\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(paymentMethod))\n}","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\"\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\"\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\"\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\"\n\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\"\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\"\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\"\nexport const ORDER_DETAILS_RESET = \"ORDER_DETAILS_RESET\"\n\nexport const ORDER_USER_REQUEST = \"ORDER_USER_REQUEST\"\nexport const ORDER_USER_SUCCESS = \"ORDER_USER_SUCCESS\"\nexport const ORDER_USER_FAIL = \"ORDER_USER_FAIL\"\nexport const ORDER_USER_RESET = \"ORDER_USER_RESET\"\n\nexport const ORDER_ADMIN_REQUEST = \"ORDER_ADMIN_REQUEST\"\nexport const ORDER_ADMIN_SUCCESS = \"ORDER_ADMIN_SUCCESS\"\nexport const ORDER_ADMIN_FAIL = \"ORDER_ADMIN_FAIL\"\nexport const ORDER_ADMIN_RESET = \"ORDER_ADMIN_RESET\"\n\nexport const ORDER_ADMIN_UPDATE_REQUEST = \"ORDER_ADMIN_UPDATE_REQUEST\"\nexport const ORDER_ADMIN_UPDATE_SUCCESS = \"ORDER_ADMIN_UPDATE_SUCCESS\"\nexport const ORDER_ADMIN_UPDATE_FAIL = \"ORDER_ADMIN_UPDATE_FAIL\"\nexport const ORDER_ADMIN_UPDATE_RESET = \"ORDER_ADMIN_UPDATE_RESET\"\n\n","import {\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\n    ORDER_USER_REQUEST, ORDER_USER_SUCCESS, ORDER_USER_FAIL,\n    ORDER_ADMIN_REQUEST, ORDER_ADMIN_SUCCESS, ORDER_ADMIN_FAIL,\n    ORDER_ADMIN_UPDATE_REQUEST, ORDER_ADMIN_UPDATE_SUCCESS, ORDER_ADMIN_UPDATE_FAIL,\n} from '../constants/orderConstants';\nimport axios from 'axios';\n\n\nexport const createOrderAction = (order) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n\n        const { userInfo: { token } } = getState().login;\n\n        console.log(\"TOKEN\", token)\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.post(\"/api/orders/create\", order, config);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const orderDetailsAction = (id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/order/${id}`, config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\n\nexport const userOrdersAction = (page = 1) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: ORDER_USER_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/user?page=${page}`, config);\n\n        dispatch({\n            type: ORDER_USER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_USER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\nexport const adminOrdersAction = (page = 1) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: ORDER_ADMIN_REQUEST\n        });\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/admin?page=${page}`, config);\n\n        dispatch({\n            type: ORDER_ADMIN_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_ADMIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n\n}\n\n\nexport const updateOrderAction = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: ORDER_ADMIN_UPDATE_REQUEST\n        })\n\n        const { userInfo: { token } } = getState().login;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n\n        const { data } = await axios.put(`/api/orders/${id}`, {}, config)\n\n        dispatch({\n            type: ORDER_ADMIN_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_ADMIN_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Card, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { createOrderAction } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\nimport CheckoutComp from '../components/CheckoutComp';\n\n\n\nconst PlaceOrderScreen = ({ history, location }) => {\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login;\n\n    const userAddress = useSelector(state => state.userAddress)\n    const { shippingAddress } = userAddress;\n\n    const payment = useSelector(state => state.payment);\n    const { paymentMethod } = payment;\n\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart\n\n    const createOrder = useSelector(state => state.createOrder)\n\n    const { loading, order, success, error } = createOrder\n\n    const redirect = location.search ? location.search.split(\"=\")[1] : null\n\n    cartItems.itemsPrice = Number(cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)).toFixed(2);\n    cartItems.taxPrice = Number(0.18 * cartItems.itemsPrice).toFixed(2)\n    cartItems.deliveryPrice = Number(cartItems.itemsPrice < 50 ? 20 : 0)\n    cartItems.totalPrice = (Number(cartItems.itemsPrice) + Number(cartItems.taxPrice) + Number(cartItems.deliveryPrice)).toFixed(2)\n\n\n\n    useEffect(() => {\n        if (!userInfo || !redirect) {\n            history.push(\"/login\")\n        } else {\n\n            if (success) {\n                dispatch({\n                    type: ORDER_CREATE_RESET\n                })\n                history.push(`/orderDetails/${order._id}`)\n\n            } else {\n                const buildScript = async () => {\n                    const { data: clientId } = await axios.get(\"/paypal/clientId\");\n\n                    const script = document.createElement('script');\n                    script.type = \"text/javascript\"\n                    script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n                    script.async = true;\n                    script.onload = () => {\n                        setSdkReady(true)\n                    }\n\n                    document.body.appendChild(script)\n                }\n\n                if (!window.paypal) {\n\n                    buildScript()\n                    console.log(sdkReady)\n                } else {\n                    setSdkReady(true)\n                }\n            }\n\n\n\n\n\n        }\n    }, [history, userInfo, redirect, success])\n\n\n    const createOrderHandler = (paymentResult) => {\n        dispatch(createOrderAction({\n            orderItems: cartItems,\n            paymentMethod,\n            shippingAddress,\n            paymentResult,\n            taxPrice: cartItems.taxPrice,\n            deliveryPrice: cartItems.deliveryPrice,\n            totalPrice: cartItems.totalPrice\n        }))\n\n\n    }\n\n    return (\n        <>\n            <CheckoutComp step1 step2 step3 step4 />\n            <HelmetComp title={`Place Order`} description=\"E Shop\" />\n            <Row>\n                <Col md={8}>\n                    <h1 className=\"my-3\">Order</h1>\n\n                    <Row>\n                        <Col md={6}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h4>User Details</h4>\n                                </ListGroup.Item>\n                                <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                    Name: {userInfo.name},<br></br>\n                                    Email: {userInfo.email} <br></br>\n                                    Address: {shippingAddress.address} {\" \"}, {shippingAddress.city} <br></br>\n                                    {shippingAddress.postalCode},{\" \"} {shippingAddress.country}.\n                        </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md={6}>\n                            <ListGroup variant=\"flush\" className=\"my-3\">\n                                <ListGroup.Item><h4>Payment Method:</h4></ListGroup.Item>\n\n                                <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                    Method: {paymentMethod}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md={10}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h4>Order Items:</h4>\n                                </ListGroup.Item>\n                                {cartItems.map((item) => {\n                                    return <ListGroup.Item key={item.product}>\n                                        <Row>\n                                            <Col md={2}>\n                                                <Link to={`/productDetails/${item.product}`}><Image src={item.image} alt={item.name} fluid /></Link>\n                                            </Col>\n                                            <Col md={6}>\n                                                <Link to={`/productDetails/${item.product}`}><p>{item.name}</p></Link>\n                                            </Col>\n                                            <Col md={4}>\n                                                <p>{item.qty} X $ {item.price} = $ {item.qty * item.price}</p>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                })}\n                            </ListGroup>\n\n                        </Col>\n                    </Row>\n\n                </Col>\n\n                <Col md={4}>\n\n                    <h2 className=\"my-3\">Order Total</h2>\n\n                    <Card>\n                        <ListGroup variant=\"flush\" style={{ fontSize: \"1.1rem\" }}>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Items Price:\n                                      </Col>\n                                    <Col>\n                                        $ {cartItems.itemsPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Tax Price:\n                                      </Col>\n                                    <Col>\n                                        $ {cartItems.taxPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Delivery Price:\n                                      </Col>\n                                    <Col>\n                                        $ {cartItems.deliveryPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Total Price:\n                                    </Col>\n                                    <Col>\n                                        $ {cartItems.totalPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {!sdkReady ? <Loader /> : (\n                                    <PayPalButton\n                                        amount={cartItems.totalPrice}\n                                        onSuccess={createOrderHandler}\n                                    />\n                                )}\n                            </ListGroup.Item>\n                            {error && <Message variant=\"danger\">{error}</Message>}\n                        </ListGroup>\n                    </Card>\n\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Card, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { orderDetailsAction } from '../actions/orderActions';\nimport { ORDER_DETAILS_RESET } from '../constants/orderConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport HelmetComp from '../components/HelmetComp';\n\n\n\nconst OrderDetailsScreen = ({ history, match }) => {\n\n    const orderId = match.params.id\n\n    const dispatch = useDispatch()\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login;\n\n    const orderDetails = useSelector(state => state.orderDetails);\n\n    const { loading, orderInfo, error } = orderDetails;\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: ORDER_DETAILS_RESET\n            })\n        }\n    }, [])\n\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            if (!orderInfo || !orderInfo._id) {\n                dispatch(orderDetailsAction(orderId))\n\n\n            }\n        }\n\n    }, [dispatch, history, userInfo, orderInfo, orderId])\n\n\n\n\n    return (\n        <>\n            <HelmetComp title={`Order Details`} description=\"E Shop\" />\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <Row>\n                    <Col md={8}>\n                        <h1 className=\"my-3\">Order</h1>\n                        {(orderInfo.user) && (\n                            <Row>\n                                <Col md={6}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h4>User Details</h4>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                            Name: {orderInfo.user.name},<br></br>\n                                            Email: {orderInfo.user.email} <br></br>\n                                            Address: {orderInfo.shippingAddress.address} {\" \"}, {orderInfo.shippingAddress.city} <br></br>\n                                            {orderInfo.shippingAddress.postalCode},{\" \"} {orderInfo.shippingAddress.country}.\n                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n\n                        )}\n                        <Row>\n                            <Col md={6}>\n                                <ListGroup variant=\"flush\" className=\"my-3\">\n                                    <ListGroup.Item><h4>Payment Method:</h4></ListGroup.Item>\n\n                                    <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                        Method: {orderInfo.paymentMethod}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={6}>\n                                <ListGroup variant=\"flush\" className=\"my-3\">\n                                    <ListGroup.Item><h4>Order Status:</h4></ListGroup.Item>\n\n                                    <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                        ORDER ID : {orderInfo._id}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                        Paid By : {orderInfo.paymentMethod} {orderInfo.createdAt}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item style={{ fontSize: \"1.1rem\" }}>\n                                        Delivery : {orderInfo.isDelivered ? `Delivered At ${orderInfo.deliveredAt}` : `Not Delivered`}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col md={10}>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h4>Order Items:</h4>\n                                    </ListGroup.Item>\n                                    {orderInfo.orderItems.map((item) => {\n                                        return <ListGroup.Item key={item.product}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Link to={`/productDetails/${item.product}`}><Image src={item.image} alt={item.name} fluid /></Link>\n                                                </Col>\n                                                <Col md={6}>\n                                                    <Link to={`/productDetails/${item.product}`}><p>{item.name}</p></Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    <p>{item.qty} X $ {item.price} = $ {item.qty * item.price}</p>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                    })}\n                                </ListGroup>\n\n                            </Col>\n                        </Row>\n\n                    </Col>\n\n                    <Col md={4}>\n\n                        <h2 className=\"my-3\">Order Total</h2>\n\n                        <Card>\n                            <ListGroup variant=\"flush\" style={{ fontSize: \"1.1rem\" }}>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                            Items Price:\n                                      </Col>\n                                        <Col>\n                                            $ {orderInfo.orderItems.reduce((acc, item) => acc + item.qty * item.price, 0)}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                            Tax Price:\n                                      </Col>\n                                        <Col>\n                                            $ {orderInfo.taxPrice}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                            Delivery Price:\n                                      </Col>\n                                        <Col>\n                                            $ {orderInfo.deliveryPrice}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                            Total Price:\n                                    </Col>\n                                        <Col>\n                                            $ {orderInfo.totalPrice}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                            </ListGroup>\n                        </Card>\n\n                    </Col>\n                </Row>\n            )}\n        </>\n    )\n}\n\nexport default OrderDetailsScreen\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { updateUserAction } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\nimport { ORDER_USER_RESET } from '../constants/orderConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { userOrdersAction } from '../actions/orderActions';\nimport Paginate from '../components/Paginate';\nimport HelmetComp from '../components/HelmetComp';\n\nconst UserProfileScreen = ({ history, match }) => {\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const page = match.params.page\n\n\n    const [name, setName] = useState(userInfo ? userInfo.name : \"\");\n    const [email, setEmail] = useState(userInfo ? userInfo.email : \"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const updateUser = useSelector(state => state.updateUser);\n    const { loading, success, error } = updateUser\n\n    const userOrders = useSelector(state => state.userOrders)\n    const { loading: loadingOrders, orders, pages, pageNumber, error: errorOrders } = userOrders\n\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: ORDER_USER_RESET\n            })\n        }\n    }, [])\n\n    // useEffect(() => {\n    //     dispatch(userOrdersAction(page))\n    // }, [page])\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n\n            dispatch(userOrdersAction(page))\n        }\n    }, [dispatch, history, userInfo, page])\n\n\n\n\n    const updateUserHandler = (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n            setMessage(\"Passwords Do Not Match\")\n        } else {\n            dispatch(updateUserAction({\n                name, email, password\n            }))\n            setMessage(\"\")\n        }\n\n    }\n\n    return (\n        <>\n            <HelmetComp title={`Profile || User`} description=\"E Shop\" />\n            <Row>\n                <Col md={3}>\n                    <h2 className=\"my-3\">Update Profile</h2>\n                    {message && <Message variant=\"danger\">{message}</Message>}\n                    {error && <Message variant=\"danger\">{error}</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={updateUserHandler} className=\"mr-3\">\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Name\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Enter Email\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter Password\"\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"confirmpassword\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm Password\"\n                                value={confirmPassword}\n                                onChange={e => setConfirmPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant=\"primary\">Update</Button>\n                    </Form>\n                </Col>\n\n                <Col md={9}>\n                    <h2 className=\"my-3 text-center\">Orders</h2>\n                    {loadingOrders ? <Loader /> : errorOrders ? <Message variant=\"danger\">{errorOrders}</Message> : orders && (\n                        <>\n                            <Table hover bordered responsive className=\"table-sm text-center\">\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>DATE</th>\n                                        <th>Name</th>\n                                        <th>PAID BY</th>\n                                        <th>DELIVERY</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {orders.map((order) => {\n                                        return <tr key={order._id}>\n                                            <td><Link to={`/orderDetails/${order._id}`}>{order._id}</Link></td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>{order.user.name}</td>\n                                            <td><i class=\"fab fa-cc-paypal fa-2x\" style={{ color: '#348ceb' }}></i></td>\n                                            <td>{order.isDelivered ? `Delivered` : 'Not Delivered'}</td>\n                                        </tr>\n                                    })}\n                                </tbody>\n                            </Table>\n                            <Paginate pageNumber={pageNumber} pages={pages} userOrders={true} />\n                        </>\n                    )}\n                </Col>\n\n            </Row>\n        </>\n    )\n}\n\nexport default UserProfileScreen\n","import React, { useEffect } from 'react'\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { adminOrdersAction, updateOrderAction } from '../actions/orderActions';\nimport { ORDER_ADMIN_UPDATE_RESET, ORDER_ADMIN_RESET } from '../constants/orderConstants';\nimport { Link } from 'react-router-dom'\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Paginate from '../components/Paginate';\nimport HelmetComp from '../components/HelmetComp';\n\n\n\nconst OrdersAdminScreen = ({ history, match }) => {\n    const dispatch = useDispatch();\n\n    const page = match.params.page || 1\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const adminOrders = useSelector(state => state.adminOrders);\n    const { loading, orders, pageNumber, pages, error } = adminOrders\n\n    const updateOrder = useSelector(state => state.updateOrder);\n\n    const { loading: loadingUpdate, success, error: errorUpdate } = updateOrder\n\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: ORDER_ADMIN_RESET\n            })\n        }\n    }, [])\n\n\n    useEffect(() => {\n        dispatch(adminOrdersAction(page));\n    }, [page])\n\n\n    useEffect(() => {\n\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n\n        } else {\n\n            if (success) {\n                dispatch({\n                    type: ORDER_ADMIN_UPDATE_RESET\n                })\n                dispatch(adminOrdersAction(page));\n            }\n\n\n            if (orders.length === 0) {\n                dispatch(adminOrdersAction(page));\n            }\n\n        }\n    }, [dispatch, history, orders, userInfo, success, page])\n\n\n    const updateOrderHandler = (id) => [\n        dispatch(updateOrderAction(id))\n    ]\n\n    return (\n        <>\n            <HelmetComp title={`Orders || Admin`} description=\"E Shop\" />\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <>\n                    <h2 className=\"my-3\">Orders</h2>\n                    {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                    {loadingUpdate && <Loader />}\n                    <Table hover bordered responsive className=\"table-sm text-center\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>DATE</th>\n                                <th>Name</th>\n                                <th>PAID BY</th>\n                                <th>Delivered</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order) => {\n                                return <tr key={order._id}>\n                                    <td><Link to={`/orderDetails/${order._id}`}>{order._id}</Link></td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>{order.user.name}</td>\n                                    <td><i className=\"fab fa-cc-paypal fa-2x\" style={{ color: '#348ceb' }}></i></td>\n                                    <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{ color: 'green' }}></i> :\n                                        <i className=\"fas fa-times\" style={{ color: 'red' }}></i>}</td>\n                                    <td><Button variant=\"primary\"\n                                        onClick={() => updateOrderHandler(order._id)}\n                                    >{order.isDelivered ? `Mark As Not Delivered` : `Mark As Delivered`}</Button></td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </Table>\n\n                    <Paginate pageNumber={pageNumber} pages={pages} orderAdmin={true} />\n\n                </>\n            )}\n        </>\n    )\n}\n\nexport default OrdersAdminScreen\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport { adminUsersAction, userDeleteAdminAction } from '../actions/userActions';\nimport { USERS_ADMIN_RESET, USER_ADMIN_DELETE_RESET } from '../constants/userConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport Paginate from '../components/Paginate';\nimport HelmetComp from '../components/HelmetComp';\n\nconst UsersAdminScreen = ({ history, match }) => {\n\n    const page = match.params.page || 1\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const adminUsers = useSelector(state => state.adminUsers)\n    const { loading, users, pageNumber, pages, error } = adminUsers\n\n    const userDeleteAdmin = useSelector(state => state.userDeleteAdmin)\n\n    const { loading: loadingDelete, success, error: errorDelete } = userDeleteAdmin\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: USERS_ADMIN_RESET\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        dispatch(adminUsersAction(page))\n    }, [page])\n\n\n    useEffect(() => {\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n        } else {\n\n            if (users.length === 0) {\n                dispatch(adminUsersAction(page))\n            }\n\n            if (success) {\n                dispatch({\n                    type: USER_ADMIN_DELETE_RESET\n                })\n                dispatch(adminUsersAction(page))\n            }\n\n        }\n    }, [dispatch, history, userInfo, success, page])\n\n\n\n    const userDeleteHandler = (id) => {\n        dispatch(userDeleteAdminAction(id));\n    }\n\n\n    return (\n        <>\n            <HelmetComp title={`Users || Admin`} description=\"E Shop\" />\n\n            <h2 className=\"my-3\">Users</h2>\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n\n                <Table hover bordered responsive className=\"table-sm text-center\">\n\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>ADMIN</th>\n                            <th></th>\n\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {users.map((user) => {\n                            return <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td>{user.email}</td>\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{ color: 'green' }}></i> :\n                                    <i className=\"fas fa-times\" style={{ color: 'green' }}></i>\n                                }</td>\n                                <td>\n                                    <Link to={`/admin/userUpdate/${user._id}?page=${page}`}>\n                                        <Button type=\"button\" className=\"btn btn-light\" >\n                                            <i className=\"fas fa-edit\"></i>\n                                        </Button>\n                                    </Link>\n\n                                    <Button type=\"button\" className=\"btn btn-danger\" onClick={() => userDeleteHandler(user._id)} >\n                                        <i className=\"fas fa-trash\"></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        })}\n                    </tbody>\n\n                </Table>\n            )}\n\n            <Paginate pageNumber={pageNumber} pages={pages} userAdmin={true} />\n        </>\n    )\n}\n\nexport default UsersAdminScreen\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { userDetailsAdminAction, userUpdateAdminAction } from '../actions/userActions';\nimport { USER_ADMIN_DETAILS_RESET, USER_ADMIN_UPDATE_RESET } from '../constants/userConstants';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport HelmetComp from '../components/HelmetComp';\n\nconst UserUpdateAdminScreen = ({ match, history, location }) => {\n\n    const userId = match.params.id\n\n    const page = location.search ? location.search.split(\"=\")[1] : 1\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login);\n    const { userInfo } = login\n\n    const userDetailsAdmin = useSelector(state => state.userDetailsAdmin);\n\n    const { loading, user, error } = userDetailsAdmin;\n\n    const userUpdateAdmin = useSelector(state => state.userUpdateAdmin)\n\n    const { loading: loadingUpdate, success, error: errorUpdate } = userUpdateAdmin\n\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [isAdmin, setIsAdmin] = useState(\"\")\n    const [message, setMessage] = useState(\"\");\n\n\n\n    useEffect(() => {\n\n        return () => {\n            dispatch({\n                type: USER_ADMIN_DETAILS_RESET\n            })\n        }\n\n    }, [])\n\n\n    useEffect(() => {\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n        } else {\n\n\n            if (!user || !user.name) {\n                dispatch(userDetailsAdminAction(userId))\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n                setIsAdmin(user.isAdmin)\n            }\n\n            if (success) {\n                dispatch({\n                    type: USER_ADMIN_UPDATE_RESET\n                })\n\n                history.push(`/admin/users/${page}`)\n            }\n\n\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n\n    const updateUserAdminHandler = (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n\n            setMessage(\"Passwords Do Not Match\")\n\n        } else {\n\n            dispatch(userUpdateAdminAction({\n                _id: userId,\n                name,\n                email,\n                password,\n                isAdmin\n            }))\n\n            setMessage(\"\")\n        }\n    }\n\n\n\n    return (\n        <>\n            <HelmetComp title={`${user.name}`} description=\"E Shop\" />\n            <Link to={`/admin/users/1`}>\n                <Button type=\"button\" variant=\"light\">Back</Button>\n            </Link>\n\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <FormContainer>\n\n                    <h2 className=\"my-3\">Update User</h2>\n\n                    {loadingUpdate && <Loader />}\n                    {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                    {message && <Message variant=\"danger\">{message}</Message>}\n\n                    <Form onSubmit={updateUserAdminHandler}>\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Name\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Enter Email\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter Password\"\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"confirmPassword\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm Password\"\n                                value={confirmPassword}\n                                onChange={e => setConfirmPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicCheckbox\" className=\"ml-3\">\n                            <Form.Check type=\"checkbox\" label=\"Is Admin\"\n                                checked={isAdmin}\n                                onChange={e => setIsAdmin(e.target.checked)}\n                            />\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant=\"primary\">Update</Button>\n\n\n\n                    </Form>\n                </FormContainer>\n            )}\n\n        </>\n    )\n}\n\nexport default UserUpdateAdminScreen\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport { productListAction, createProductAction, deleteProductAction } from '../actions/productsActions';\nimport { PRODUCT_LIST_RESET, PRODUCT_CREATE_ADMIN_RESET, PRODUCT_DELETE_ADMIN_RESET } from '../constants/productsConstants';\nimport Paginate from '../components/Paginate.js'\nimport HelmetComp from '../components/HelmetComp';\n\n\nconst ProductsAdminScreen = ({ history, match }) => {\n\n    const page = match.params.page || 1\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n    const productList = useSelector(state => state.productList)\n    const { loading, products, pageNumber, pages, error } = productList\n\n    const createProduct = useSelector(state => state.createProduct)\n\n    const { loading: loadingCreate, success: successCreate, error: errorCreate } = createProduct\n\n    const deleteProduct = useSelector(state => state.deleteProduct);\n    const { loading: loadingDelete, success: successDelete, error: errorDelete } = deleteProduct\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: PRODUCT_LIST_RESET\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        dispatch(productListAction('', page))\n    }, [page])\n\n\n    useEffect(() => {\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n        } else {\n\n            if (!products || products.length === 0) {\n                dispatch(productListAction('', page))\n            }\n\n            if (successCreate) {\n                dispatch({\n                    type: PRODUCT_CREATE_ADMIN_RESET\n                })\n                dispatch(productListAction('', page))\n            }\n\n            if (successDelete) {\n                dispatch({\n                    type: PRODUCT_DELETE_ADMIN_RESET\n                })\n\n                dispatch(productListAction('', page))\n            }\n\n        }\n    }, [dispatch, history, userInfo, products, successCreate, successDelete, page])\n\n\n\n    const createProductHandler = () => {\n        dispatch(createProductAction());\n    }\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProductAction(id));\n    }\n\n    return (\n        <>\n            <HelmetComp title={`Products || Admin`} description=\"E Shop\" />\n            <h2 className=\"my-3\">Products</h2>\n            <Button type=\"button\" variant=\"primary\" className=\"ml-0 my-3\" onClick={createProductHandler}><i className=\"fas fa-add\"></i> Create</Button>\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <>\n                    <Table hover bordered responsive className=\"table-sm\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Brand</th>\n                                <th>Category</th>\n                                <th>Price</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map((product) => {\n                                return <tr key={product._id}>\n                                    <td><Link to={`/productDetails/${product._id}`}>{product._id}</Link></td>\n                                    <td>{product.name}</td>\n                                    <td>{product.brand}</td>\n                                    <td>{product.category}</td>\n                                    <td>$ {product.price}</td>\n                                    <td>\n                                        <Link to={`/admin/product/edit/${product._id}?page=${page}`}>\n                                            <Button\n                                                type=\"button\"\n                                                className=\"btn btn-light\"\n                                            ><i className=\"fas fa-edit\"></i></Button>\n                                        </Link>\n\n                                        <Button\n                                            type=\"button\"\n                                            className=\"btn btn-danger\"\n                                            onClick={() => deleteProductHandler(product._id)}\n                                        ><i className=\"fas fa-trash\"></i></Button>\n                                    </td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </Table>\n                    <Paginate pageNumber={pageNumber} pages={pages} productAdmin={true} />\n                </>\n\n            )}\n        </>\n    )\n}\n\nexport default ProductsAdminScreen\n","import React, { useState, useEffect } from 'react'\nimport FormContainer from '../components/FormContainer';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { productDetailsAction, updateProductAction } from '../actions/productsActions';\nimport { PRODUCT_DETAILS_RESET, PRODUCT_UPDATE_ADMIN_RESET } from '../constants/productsConstants';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport HelmetComp from '../components/HelmetComp';\n\nconst ProductEditScreen = ({ match, history, location }) => {\n\n    const productId = match.params.id\n\n    const page = location.search ? location.search.split(\"=\")[1] : 1\n\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [brand, setBrand] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [countInStock, setCountInStock] = useState(\"\");\n    const [uploading, setUploading] = useState(false)\n\n\n\n    const dispatch = useDispatch();\n\n    const login = useSelector(state => state.login)\n    const { userInfo } = login\n\n\n    const productInfo = useSelector(state => state.productInfo);\n    const { loading, productDetails, error } = productInfo;\n\n    const updateProduct = useSelector(state => state.updateProduct)\n\n    const { loading: loadingUpdate, success, error: errorUpdate } = updateProduct\n\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: PRODUCT_DETAILS_RESET\n            })\n        }\n    }, [])\n\n\n\n    useEffect(() => {\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push(\"/login\")\n        } else {\n            if (!productDetails || !productDetails.name || productDetails._id !== productId) {\n                dispatch(productDetailsAction(productId))\n            } else {\n                setName(productDetails.name)\n                setDescription(productDetails.description)\n                setCategory(productDetails.category)\n                setBrand(productDetails.brand);\n                setImage(productDetails.image);\n                setPrice(productDetails.price);\n                setCountInStock(productDetails.countInStock)\n            }\n\n\n            if (success) {\n                dispatch({\n                    type: PRODUCT_UPDATE_ADMIN_RESET\n                })\n\n                history.push(`/admin/products/${page}`)\n            }\n        }\n    }, [dispatch, history, userInfo, productDetails, success])\n\n\n\n    const updateProductHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(updateProductAction({\n            _id: productId,\n            name,\n            description,\n            category,\n            brand,\n            image,\n            price,\n            countInStock\n\n        }))\n    }\n\n\n    const uploadImageHandler = async (e) => {\n\n        e.preventDefault();\n\n        const file = e.target.files[0];\n\n        const formData = new FormData();\n\n        formData.append('image', file)\n\n        try {\n            setUploading(true);\n\n            const config = {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            }\n\n            const { data } = await axios.post(\"/api/uploads\", formData, config);\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            console.error(error);\n            setUploading(false)\n\n        }\n\n    }\n\n\n    return (\n        <>\n            <HelmetComp title={`${productDetails.name}`} description=\"E Shop\" />\n            <Link to=\"/admin/products/1\">\n                <Button type=\"button\" variant=\"light\">Back</Button>\n            </Link>\n\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <FormContainer>\n                    <h2 className=\"my-3\">Update Product</h2>\n                    {loadingUpdate && <Loader />}\n                    {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                    <Form onSubmit={updateProductHandler}>\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Name\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Description\"\n                                value={description}\n                                onChange={e => setDescription(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"category\">\n                            <Form.Label>Caetgory</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Category\"\n                                value={category}\n                                onChange={e => setCategory(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"brand\">\n                            <Form.Label>Brand</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Brand\"\n                                value={brand}\n                                onChange={e => setBrand(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"image\">\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter Image\"\n                                value={image}\n                                onChange={e => setImage(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.File id=\"exampleFormControlFile1\" label=\"Upload Image\"\n                                onChange={(e) => uploadImageHandler(e)} custom\n                            />\n                        </Form.Group>\n                        {uploading && <Loader />}\n\n                        <Form.Group controlId=\"price\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"Enter Price\"\n                                value={price}\n                                onChange={e => setPrice(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"countInStock\">\n                            <Form.Label>Count In Stock</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"Enter Count In Stock\"\n                                value={countInStock}\n                                onChange={e => setCountInStock(e.target.value)}\n                            />\n\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant=\"primary\">Update</Button>\n                    </Form>\n                </FormContainer>\n            )}\n        </>\n    )\n}\n\nexport default ProductEditScreen\n","import React from 'react';\nimport './bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomeScreen from './Screens/HomeScreen';\nimport ProductDetailsScreen from './Screens/ProductDetailsScreen';\nimport CartScreen from './Screens/CartScreen';\nimport LoginScreen from './Screens/LoginScreen';\nimport RegisterScreen from './Screens/RegisterScreen';\nimport ShippingAddressScreen from './Screens/ShippingAddressScreen';\nimport PaymentMethodScreen from './Screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen';\nimport OrderDetailsScreen from './Screens/OrderDetailsScreen';\nimport UserProfileScreen from './Screens/UserProfileScreen';\nimport OrdersAdminScreen from './Screens/OrdersAdminScreen';\nimport UsersAdminScreen from './Screens/UsersAdminScreen';\nimport UserUpdateAdminScreen from './Screens/UserUpdateAdminScreen';\nimport ProductsAdminScreen from './Screens/ProductsAdminScreen';\nimport ProductEditScreen from './Screens/ProductEditScreen';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route exact path=\"/\" component={HomeScreen} />\n          <Route exact path=\"/keywords/:keywords\" component={HomeScreen} />\n          <Route exact path=\"/keywords/:keywords/page/:page\" component={HomeScreen} />\n          <Route exact path=\"/page/:page\" component={HomeScreen} />\n          <Route exact path=\"/productDetails/:id\" component={ProductDetailsScreen} />\n          <Route exact path=\"/cart\" component={CartScreen} />\n          <Route exact path=\"/login\" component={LoginScreen} />\n          <Route exact path=\"/register\" component={RegisterScreen} />\n          <Route exact path=\"/shippingAddress\" component={ShippingAddressScreen} />\n          <Route exact path=\"/profile/:page\" component={UserProfileScreen} />\n          <Route exact path=\"/paymentMethod\" component={PaymentMethodScreen} />\n          <Route exact path=\"/createOrder\" component={PlaceOrderScreen} />\n          <Route exact path=\"/orderDetails/:id\" component={OrderDetailsScreen} />\n          <Route exact path=\"/admin/orders/:page\" component={OrdersAdminScreen} />\n          <Route exact path=\"/admin/users/:page\" component={UsersAdminScreen} />\n          <Route exact path=\"/admin/userUpdate/:id\" component={UserUpdateAdminScreen} />\n          <Route exact path=\"/admin/products/:page\" component={ProductsAdminScreen} />\n          <Route exact path=\"/admin/product/edit/:id\" component={ProductEditScreen} />\n\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport { productListReducer, productDetailsReducer, createProductReducer, deleteProductReducer, updateProductReducer, reviewProductReducer, topProductsReducer } from './reducers/productsReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { loginReducer, userRegisterReducer, userAddressReducer, updateUserReducer, adminUsersReducer, userDeleteAdminReducer, userDetailsAdminReducer, userUpdateAdminReducer } from './reducers/userReducers';\nimport { paymentReducer } from './reducers/paymentReducer';\nimport { createOrderReducer, orderDetailsReducer, userOrdersReducer, adminOrdersReducer, updateOrderReducer } from \"./reducers/orderReducers\";\n\n\n\nconst reducers = combineReducers({\n    productList: productListReducer,\n    productInfo: productDetailsReducer,\n    topProducts: topProductsReducer,\n    cart: cartReducer,\n    login: loginReducer,\n    userRegister: userRegisterReducer,\n    userAddress: userAddressReducer,\n    adminUsers: adminUsersReducer,\n    payment: paymentReducer,\n    reviewProduct: reviewProductReducer,\n    createProduct: createProductReducer,\n    deleteProduct: deleteProductReducer,\n    updateProduct: updateProductReducer,\n    createOrder: createOrderReducer,\n    orderDetails: orderDetailsReducer,\n    updateUser: updateUserReducer,\n    userOrders: userOrdersReducer,\n    userDeleteAdmin: userDeleteAdminReducer,\n    userDetailsAdmin: userDetailsAdminReducer,\n    userUpdateAdmin: userUpdateAdminReducer,\n    adminOrders: adminOrdersReducer,\n    updateOrder: updateOrderReducer\n\n})\n\n\nconst cartFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {}\n\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\") ? JSON.parse(localStorage.getItem(\"paymentMethod\")) : \"PayPal\"\n\nconst initialState = {\n    cart: { cartItems: cartFromStorage },\n    login: { userInfo: userInfoFromStorage },\n    userAddress: { shippingAddress: shippingAddressFromStorage },\n    payment: { paymentMethod: paymentMethodFromStorage }\n}\n\nconst middleware = [thunk]\n\n\n\n\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_RESET,\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_RESET,\n    PRODUCT_CREATE_ADMIN_REQUEST, PRODUCT_CREATE_ADMIN_SUCCESS, PRODUCT_CREATE_ADMIN_FAIL, PRODUCT_CREATE_ADMIN_RESET,\n    PRODUCT_DELETE_ADMIN_REQUEST, PRODUCT_DELETE_ADMIN_SUCCESS, PRODUCT_DELETE_ADMIN_FAIL, PRODUCT_DELETE_ADMIN_RESET,\n    PRODUCT_UPDATE_ADMIN_REQUEST, PRODUCT_UPDATE_ADMIN_SUCCESS, PRODUCT_UPDATE_ADMIN_FAIL, PRODUCT_UPDATE_ADMIN_RESET,\n    PRODUCT_REVIEW_REQUEST, PRODUCT_REVIEW_SUCCESS, PRODUCT_REVIEW_FAIL, PRODUCT_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL, PRODUCT_TOP_RESET\n} from '../constants/productsConstants';\n\n\n\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { ...state, loading: true }\n\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload.products, pageNumber: action.payload.pageNumber, pages: action.payload.pages }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_LIST_RESET:\n            return { products: [] }\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport const productDetailsReducer = (state = { productDetails: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, productDetails: action.payload }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_DETAILS_RESET:\n            return { productDetails: { reviews: [] } }\n\n        default:\n            return state\n    }\n}\n\n\nexport const createProductReducer = (state = { product: {} }, action) => {\n\n    switch (action.type) {\n        case PRODUCT_CREATE_ADMIN_REQUEST:\n            return { ...state, loading: false }\n\n        case PRODUCT_CREATE_ADMIN_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_ADMIN_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\n\nexport const deleteProductReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case PRODUCT_DELETE_ADMIN_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_ADMIN_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_DELETE_ADMIN_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const updateProductReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case PRODUCT_UPDATE_ADMIN_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_ADMIN_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_UPDATE_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_ADMIN_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const reviewProductReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_REVIEW_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_REVIEW_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const topProductsReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n\n        case PRODUCT_TOP_REQUEST:\n            return { ...state, loading: true }\n\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload }\n\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_TOP_RESET:\n            return { products: [] }\n\n        default:\n            return state\n    }\n}","import { CART_ADD, CART_ADD_RESET, CART_DELETE } from '../constants/cartConstants';\n\n\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n\n        case CART_ADD:\n            const itemExist = state.cartItems.find((p) => p.product === action.payload.product)\n\n            if (itemExist) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((item) => {\n                        return item.product === action.payload.product ? action.payload : item\n                    })\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, action.payload]\n                }\n            }\n\n        case CART_DELETE:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter((item) => item.product !== action.payload)\n            }\n\n        case CART_ADD_RESET:\n            return { cartItems: [] }\n\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET,\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_RESET,\n    USER_ADDRESS_SUCCESS,\n    USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET,\n    USERS_ADMIN_REQUEST, USERS_ADMIN_SUCCESS, USERS_ADMIN_FAIL, USERS_ADMIN_RESET,\n    USER_ADMIN_DELETE_REQUEST, USER_ADMIN_DELETE_SUCCESS, USER_ADMIN_DELETE_FAIL, USER_ADMIN_DELETE_RESET,\n    USER_ADMIN_DETAILS_REQUEST, USER_ADMIN_DETAILS_SUCCESS, USER_ADMIN_DETAILS_FAIL, USER_ADMIN_DETAILS_RESET,\n    USER_ADMIN_UPDATE_REQUEST, USER_ADMIN_UPDATE_SUCCESS, USER_ADMIN_UPDATE_FAIL, USER_ADMIN_UPDATE_RESET\n} from '../constants/userConstants';\n\n\n\n\nexport const loginReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGIN_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, success: true };\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_REGISTER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userAddressReducer = (state = { shippingAddress: {} }, action) => {\n    switch (action.type) {\n\n        case USER_ADDRESS_SUCCESS:\n            return { shippingAddress: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const updateUserReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const adminUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n\n        case USERS_ADMIN_REQUEST:\n            return { ...state, loading: true }\n\n        case USERS_ADMIN_SUCCESS:\n            return { loading: false, users: action.payload.users, pageNumber: action.payload.pageNumber, pages: action.payload.pages }\n\n        case USERS_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USERS_ADMIN_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\nexport const userDeleteAdminReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case USER_ADMIN_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_ADMIN_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_ADMIN_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_ADMIN_DELETE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsAdminReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case USER_ADMIN_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_ADMIN_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_ADMIN_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_ADMIN_DETAILS_RESET:\n            return { user: {} }\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateAdminReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_ADMIN_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_ADMIN_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_ADMIN_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_ADMIN_UPDATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}","import { ADD_PAYMENT_METHOD_SUCCESS } from '../constants/paymentConstans';\n\n\n\nexport const paymentReducer = (state = { paymentMethod: \"\" }, action) => {\n    switch (action.type) {\n\n        case ADD_PAYMENT_METHOD_SUCCESS:\n            return { paymentMethod: action.payload }\n\n        default:\n            return state\n    }\n}","import {\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_RESET,\n    ORDER_USER_REQUEST, ORDER_USER_SUCCESS, ORDER_USER_FAIL, ORDER_USER_RESET,\n    ORDER_ADMIN_REQUEST, ORDER_ADMIN_SUCCESS, ORDER_ADMIN_FAIL, ORDER_ADMIN_RESET,\n    ORDER_ADMIN_UPDATE_REQUEST, ORDER_ADMIN_UPDATE_SUCCESS, ORDER_ADMIN_UPDATE_FAIL, ORDER_ADMIN_UPDATE_RESET\n} from '../constants/orderConstants';\n\n\n\nexport const createOrderReducer = (state = { order: { orderItems: [] } }, action) => {\n    switch (action.type) {\n\n        case ORDER_CREATE_REQUEST:\n            return { ...state, loading: true }\n\n        case ORDER_CREATE_SUCCESS:\n            return { loading: false, order: action.payload, success: true }\n\n        case ORDER_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_CREATE_RESET:\n            return { order: { orderItems: [] } }\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { orderInfo: { orderItems: [] } }, action) => {\n    switch (action.type) {\n\n        case ORDER_DETAILS_REQUEST:\n            return { ...state, loading: true };\n\n        case ORDER_DETAILS_SUCCESS:\n            return { loading: false, orderInfo: action.payload }\n\n        case ORDER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_DETAILS_RESET:\n            return { orderInfo: { orderItems: [] } }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_USER_REQUEST:\n            return { ...state, loading: true }\n\n        case ORDER_USER_SUCCESS:\n            return { loading: false, orders: action.payload.orders, pageNumber: action.payload.pageNumber, pages: action.payload.pages }\n\n        case ORDER_USER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_USER_RESET:\n            return { orders: [] }\n        default:\n            return state\n    }\n}\n\nexport const adminOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case ORDER_ADMIN_REQUEST:\n            return { ...state, loading: true }\n\n        case ORDER_ADMIN_SUCCESS:\n            return { loading: false, orders: action.payload.orders, pageNumber: action.payload.pageNumber, pages: action.payload.pages }\n\n        case ORDER_ADMIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_ADMIN_RESET:\n            return { orders: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const updateOrderReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_ADMIN_UPDATE_REQUEST:\n            return { loading: true }\n\n        case ORDER_ADMIN_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case ORDER_ADMIN_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORDER_ADMIN_UPDATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}